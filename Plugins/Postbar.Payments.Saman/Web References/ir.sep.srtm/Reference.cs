//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace NopFarsi.Payments.SepShaparak.ir.sep.srtm {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    // CODEGEN: The optional WSDL extension element 'PolicyReference' from namespace 'http://schemas.xmlsoap.org/ws/2004/09/policy' was not handled.
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BasicHttpBinding_IsrvRefund", Namespace="http://tempuri.org/")]
    public partial class srvRefund : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback Refund_RegOperationCompleted;
        
        private System.Threading.SendOrPostCallback Refund_ExecOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDailyRefundListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRefundStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetModifiedRefundListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRefundDetailOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public srvRefund() {
            this.Url = global::NopFarsi.Payments.SepShaparak.Properties.Settings.Default.Postbar_Payments_Saman_ir_sep_srtm_srvRefund;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event Refund_RegCompletedEventHandler Refund_RegCompleted;
        
        /// <remarks/>
        public event Refund_ExecCompletedEventHandler Refund_ExecCompleted;
        
        /// <remarks/>
        public event GetDailyRefundListCompletedEventHandler GetDailyRefundListCompleted;
        
        /// <remarks/>
        public event GetRefundStatusCompletedEventHandler GetRefundStatusCompleted;
        
        /// <remarks/>
        public event GetModifiedRefundListCompletedEventHandler GetModifiedRefundListCompleted;
        
        /// <remarks/>
        public event GetRefundDetailCompletedEventHandler GetRefundDetailCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsrvRefund/Refund_Reg", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public ResponseModel Refund_Reg(
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string userName, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string password, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string refNum, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string resNum, 
                    long transactionTermId, 
                    [System.Xml.Serialization.XmlIgnoreAttribute()] bool transactionTermIdSpecified, 
                    long refundTermId, 
                    [System.Xml.Serialization.XmlIgnoreAttribute()] bool refundTermIdSpecified, 
                    long amount, 
                    [System.Xml.Serialization.XmlIgnoreAttribute()] bool amountSpecified, 
                    long requestId, 
                    [System.Xml.Serialization.XmlIgnoreAttribute()] bool requestIdSpecified, 
                    int exeTime, 
                    [System.Xml.Serialization.XmlIgnoreAttribute()] bool exeTimeSpecified, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string email, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string cellNumber) {
            object[] results = this.Invoke("Refund_Reg", new object[] {
                        userName,
                        password,
                        refNum,
                        resNum,
                        transactionTermId,
                        transactionTermIdSpecified,
                        refundTermId,
                        refundTermIdSpecified,
                        amount,
                        amountSpecified,
                        requestId,
                        requestIdSpecified,
                        exeTime,
                        exeTimeSpecified,
                        email,
                        cellNumber});
            return ((ResponseModel)(results[0]));
        }
        
        /// <remarks/>
        public void Refund_RegAsync(
                    string userName, 
                    string password, 
                    string refNum, 
                    string resNum, 
                    long transactionTermId, 
                    bool transactionTermIdSpecified, 
                    long refundTermId, 
                    bool refundTermIdSpecified, 
                    long amount, 
                    bool amountSpecified, 
                    long requestId, 
                    bool requestIdSpecified, 
                    int exeTime, 
                    bool exeTimeSpecified, 
                    string email, 
                    string cellNumber) {
            this.Refund_RegAsync(userName, password, refNum, resNum, transactionTermId, transactionTermIdSpecified, refundTermId, refundTermIdSpecified, amount, amountSpecified, requestId, requestIdSpecified, exeTime, exeTimeSpecified, email, cellNumber, null);
        }
        
        /// <remarks/>
        public void Refund_RegAsync(
                    string userName, 
                    string password, 
                    string refNum, 
                    string resNum, 
                    long transactionTermId, 
                    bool transactionTermIdSpecified, 
                    long refundTermId, 
                    bool refundTermIdSpecified, 
                    long amount, 
                    bool amountSpecified, 
                    long requestId, 
                    bool requestIdSpecified, 
                    int exeTime, 
                    bool exeTimeSpecified, 
                    string email, 
                    string cellNumber, 
                    object userState) {
            if ((this.Refund_RegOperationCompleted == null)) {
                this.Refund_RegOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRefund_RegOperationCompleted);
            }
            this.InvokeAsync("Refund_Reg", new object[] {
                        userName,
                        password,
                        refNum,
                        resNum,
                        transactionTermId,
                        transactionTermIdSpecified,
                        refundTermId,
                        refundTermIdSpecified,
                        amount,
                        amountSpecified,
                        requestId,
                        requestIdSpecified,
                        exeTime,
                        exeTimeSpecified,
                        email,
                        cellNumber}, this.Refund_RegOperationCompleted, userState);
        }
        
        private void OnRefund_RegOperationCompleted(object arg) {
            if ((this.Refund_RegCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Refund_RegCompleted(this, new Refund_RegCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsrvRefund/Refund_Exec", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public ResponseModel Refund_Exec([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string userName, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string password, long partialRefundId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool partialRefundIdSpecified, typeRefundAction typRefundAction, [System.Xml.Serialization.XmlIgnoreAttribute()] bool typRefundActionSpecified, long termId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool termIdSpecified) {
            object[] results = this.Invoke("Refund_Exec", new object[] {
                        userName,
                        password,
                        partialRefundId,
                        partialRefundIdSpecified,
                        typRefundAction,
                        typRefundActionSpecified,
                        termId,
                        termIdSpecified});
            return ((ResponseModel)(results[0]));
        }
        
        /// <remarks/>
        public void Refund_ExecAsync(string userName, string password, long partialRefundId, bool partialRefundIdSpecified, typeRefundAction typRefundAction, bool typRefundActionSpecified, long termId, bool termIdSpecified) {
            this.Refund_ExecAsync(userName, password, partialRefundId, partialRefundIdSpecified, typRefundAction, typRefundActionSpecified, termId, termIdSpecified, null);
        }
        
        /// <remarks/>
        public void Refund_ExecAsync(string userName, string password, long partialRefundId, bool partialRefundIdSpecified, typeRefundAction typRefundAction, bool typRefundActionSpecified, long termId, bool termIdSpecified, object userState) {
            if ((this.Refund_ExecOperationCompleted == null)) {
                this.Refund_ExecOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRefund_ExecOperationCompleted);
            }
            this.InvokeAsync("Refund_Exec", new object[] {
                        userName,
                        password,
                        partialRefundId,
                        partialRefundIdSpecified,
                        typRefundAction,
                        typRefundActionSpecified,
                        termId,
                        termIdSpecified}, this.Refund_ExecOperationCompleted, userState);
        }
        
        private void OnRefund_ExecOperationCompleted(object arg) {
            if ((this.Refund_ExecCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Refund_ExecCompleted(this, new Refund_ExecCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsrvRefund/GetDailyRefundList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public ResponseModel GetDailyRefundList([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string userName, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string password, long termId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool termIdSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<System.DateTime> date, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool dateSpecified) {
            object[] results = this.Invoke("GetDailyRefundList", new object[] {
                        userName,
                        password,
                        termId,
                        termIdSpecified,
                        date,
                        dateSpecified});
            return ((ResponseModel)(results[0]));
        }
        
        /// <remarks/>
        public void GetDailyRefundListAsync(string userName, string password, long termId, bool termIdSpecified, System.Nullable<System.DateTime> date, bool dateSpecified) {
            this.GetDailyRefundListAsync(userName, password, termId, termIdSpecified, date, dateSpecified, null);
        }
        
        /// <remarks/>
        public void GetDailyRefundListAsync(string userName, string password, long termId, bool termIdSpecified, System.Nullable<System.DateTime> date, bool dateSpecified, object userState) {
            if ((this.GetDailyRefundListOperationCompleted == null)) {
                this.GetDailyRefundListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDailyRefundListOperationCompleted);
            }
            this.InvokeAsync("GetDailyRefundList", new object[] {
                        userName,
                        password,
                        termId,
                        termIdSpecified,
                        date,
                        dateSpecified}, this.GetDailyRefundListOperationCompleted, userState);
        }
        
        private void OnGetDailyRefundListOperationCompleted(object arg) {
            if ((this.GetDailyRefundListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDailyRefundListCompleted(this, new GetDailyRefundListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsrvRefund/GetRefundStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public ResponseModel GetRefundStatus([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string userName, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string password, long refundId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool refundIdSpecified, long termId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool termIdSpecified) {
            object[] results = this.Invoke("GetRefundStatus", new object[] {
                        userName,
                        password,
                        refundId,
                        refundIdSpecified,
                        termId,
                        termIdSpecified});
            return ((ResponseModel)(results[0]));
        }
        
        /// <remarks/>
        public void GetRefundStatusAsync(string userName, string password, long refundId, bool refundIdSpecified, long termId, bool termIdSpecified) {
            this.GetRefundStatusAsync(userName, password, refundId, refundIdSpecified, termId, termIdSpecified, null);
        }
        
        /// <remarks/>
        public void GetRefundStatusAsync(string userName, string password, long refundId, bool refundIdSpecified, long termId, bool termIdSpecified, object userState) {
            if ((this.GetRefundStatusOperationCompleted == null)) {
                this.GetRefundStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRefundStatusOperationCompleted);
            }
            this.InvokeAsync("GetRefundStatus", new object[] {
                        userName,
                        password,
                        refundId,
                        refundIdSpecified,
                        termId,
                        termIdSpecified}, this.GetRefundStatusOperationCompleted, userState);
        }
        
        private void OnGetRefundStatusOperationCompleted(object arg) {
            if ((this.GetRefundStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRefundStatusCompleted(this, new GetRefundStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsrvRefund/GetModifiedRefundList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public ResponseModel GetModifiedRefundList([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string userName, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string password, long termId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool termIdSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<System.DateTime> date, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool dateSpecified) {
            object[] results = this.Invoke("GetModifiedRefundList", new object[] {
                        userName,
                        password,
                        termId,
                        termIdSpecified,
                        date,
                        dateSpecified});
            return ((ResponseModel)(results[0]));
        }
        
        /// <remarks/>
        public void GetModifiedRefundListAsync(string userName, string password, long termId, bool termIdSpecified, System.Nullable<System.DateTime> date, bool dateSpecified) {
            this.GetModifiedRefundListAsync(userName, password, termId, termIdSpecified, date, dateSpecified, null);
        }
        
        /// <remarks/>
        public void GetModifiedRefundListAsync(string userName, string password, long termId, bool termIdSpecified, System.Nullable<System.DateTime> date, bool dateSpecified, object userState) {
            if ((this.GetModifiedRefundListOperationCompleted == null)) {
                this.GetModifiedRefundListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetModifiedRefundListOperationCompleted);
            }
            this.InvokeAsync("GetModifiedRefundList", new object[] {
                        userName,
                        password,
                        termId,
                        termIdSpecified,
                        date,
                        dateSpecified}, this.GetModifiedRefundListOperationCompleted, userState);
        }
        
        private void OnGetModifiedRefundListOperationCompleted(object arg) {
            if ((this.GetModifiedRefundListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetModifiedRefundListCompleted(this, new GetModifiedRefundListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsrvRefund/GetRefundDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public ResponseModel GetRefundDetail([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string userName, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string password, long refundId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool refundIdSpecified, long termId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool termIdSpecified) {
            object[] results = this.Invoke("GetRefundDetail", new object[] {
                        userName,
                        password,
                        refundId,
                        refundIdSpecified,
                        termId,
                        termIdSpecified});
            return ((ResponseModel)(results[0]));
        }
        
        /// <remarks/>
        public void GetRefundDetailAsync(string userName, string password, long refundId, bool refundIdSpecified, long termId, bool termIdSpecified) {
            this.GetRefundDetailAsync(userName, password, refundId, refundIdSpecified, termId, termIdSpecified, null);
        }
        
        /// <remarks/>
        public void GetRefundDetailAsync(string userName, string password, long refundId, bool refundIdSpecified, long termId, bool termIdSpecified, object userState) {
            if ((this.GetRefundDetailOperationCompleted == null)) {
                this.GetRefundDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRefundDetailOperationCompleted);
            }
            this.InvokeAsync("GetRefundDetail", new object[] {
                        userName,
                        password,
                        refundId,
                        refundIdSpecified,
                        termId,
                        termIdSpecified}, this.GetRefundDetailOperationCompleted, userState);
        }
        
        private void OnGetRefundDetailOperationCompleted(object arg) {
            if ((this.GetRefundDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRefundDetailCompleted(this, new GetRefundDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/Refund.DTO")]
    public partial class ResponseModel {
        
        private string actionNameField;
        
        private string descriptionField;
        
        private ErrCode errorCodeField;
        
        private bool errorCodeFieldSpecified;
        
        private string errorMessageField;
        
        private long referenceIdField;
        
        private bool referenceIdFieldSpecified;
        
        private int requestStatusField;
        
        private bool requestStatusFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ActionName {
            get {
                return this.actionNameField;
            }
            set {
                this.actionNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public ErrCode ErrorCode {
            get {
                return this.errorCodeField;
            }
            set {
                this.errorCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ErrorCodeSpecified {
            get {
                return this.errorCodeFieldSpecified;
            }
            set {
                this.errorCodeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        public long ReferenceId {
            get {
                return this.referenceIdField;
            }
            set {
                this.referenceIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ReferenceIdSpecified {
            get {
                return this.referenceIdFieldSpecified;
            }
            set {
                this.referenceIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int RequestStatus {
            get {
                return this.requestStatusField;
            }
            set {
                this.requestStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RequestStatusSpecified {
            get {
                return this.requestStatusFieldSpecified;
            }
            set {
                this.requestStatusFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/Refund.DTO")]
    public enum ErrCode {
        
        /// <remarks/>
        InvalidParameter,
        
        /// <remarks/>
        AuthenticateUserFail,
        
        /// <remarks/>
        Unknown,
        
        /// <remarks/>
        Success,
        
        /// <remarks/>
        DuplicateRequest,
        
        /// <remarks/>
        OriginalAmountIncorrect,
        
        /// <remarks/>
        ObjectNotFound,
        
        /// <remarks/>
        TransactionStateisFinal,
        
        /// <remarks/>
        CardExists,
        
        /// <remarks/>
        CardNotFound,
        
        /// <remarks/>
        Fatal,
        
        /// <remarks/>
        WrongStateForDelete,
        
        /// <remarks/>
        TxnIsProcessing,
        
        /// <remarks/>
        InvalidConfiguration,
        
        /// <remarks/>
        PermissionDenied,
        
        /// <remarks/>
        ClientIPIsNotValid,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/Refund.DTO")]
    public enum typeRefundAction {
        
        /// <remarks/>
        None,
        
        /// <remarks/>
        Approve,
        
        /// <remarks/>
        Cancel,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void Refund_RegCompletedEventHandler(object sender, Refund_RegCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Refund_RegCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Refund_RegCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ResponseModel Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ResponseModel)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void Refund_ExecCompletedEventHandler(object sender, Refund_ExecCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Refund_ExecCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Refund_ExecCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ResponseModel Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ResponseModel)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetDailyRefundListCompletedEventHandler(object sender, GetDailyRefundListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDailyRefundListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDailyRefundListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ResponseModel Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ResponseModel)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetRefundStatusCompletedEventHandler(object sender, GetRefundStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRefundStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRefundStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ResponseModel Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ResponseModel)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetModifiedRefundListCompletedEventHandler(object sender, GetModifiedRefundListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetModifiedRefundListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetModifiedRefundListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ResponseModel Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ResponseModel)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetRefundDetailCompletedEventHandler(object sender, GetRefundDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRefundDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRefundDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ResponseModel Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ResponseModel)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591