@model CheckoutConfirmModel
@using Nop.Core
@using Nop.Core.Domain.Tax
@using Microsoft.AspNetCore.Http;
@using Microsoft.AspNetCore.Mvc;
@using Nop.Web.Controllers;
@using Nop.Core.Http.Extensions
@using Newtonsoft.Json;

@inject IHttpContextAccessor HttpContextAccessor
@inject IWebHelper webHelper
@inject IWorkContext workContext


@{
    Layout = "_ColumnsOne";

    //title
    Html.AddTitleParts(T("PageTitle.Checkout").Text);
    //page class
    Html.AppendPageCssClassParts("html-checkout-page");
    Html.AppendPageCssClassParts("html-order-confirm-page");

    var Step = HttpContextAccessor.HttpContext.Session.GetInt32("ShipmentStep");
}




<div class="page checkout-page order-confirm-page">
    <form asp-route="Mus_CheckoutConfirm" method="post" id="confirm-order-form">

        @await Component.InvokeAsync("Mus_CheckoutProgress", new { step = CheckoutProgressStep.Confirm })
        <div class="page-title">
            <h1>@T("Checkout.ConfirmYourOrder")</h1>
        </div>
        <div class="page-body checkout-data">
            @await Component.InvokeAsync("Widget", new { widgetZone = "checkout_confirm_top" })
            <div class="section confirm-order">
                <script type="text/javascript" asp-location="Footer">
                    $(document).ready(function () {
                        $('.confirm-order-next-step-button').click(function () {
                            //terms of service
                            var termOfServiceOk = true;
                            if ($('#termsofservice').length > 0) {
                                //terms of service element exists
                                if (!$('#termsofservice').is(':checked')) {
                                    $("#terms-of-service-warning-box").dialog();
                                    termOfServiceOk = false;
                                } else {
                                    termOfServiceOk = true;
                                }
                            }
                            if (termOfServiceOk) {
                                //$('#confirm-order-form').submit();
                                //$('.confirm-order-next-step-button').attr('disabled', 'disabled');
                                return true;
                            } else {
                                return false;
                            }
                        });
                    });
                </script>
                @if (!string.IsNullOrEmpty(Model.MinOrderTotalWarning))
                {
                    <span class="min-order-warning">@Model.MinOrderTotalWarning</span>
                }
                else
                {
                    if (Model.TermsOfServiceOnOrderConfirmPage)
                    {
                        <div id="terms-of-service-warning-box" title="@T("Checkout.TermsOfService")" style="display: none;">
                            <p>@T("Checkout.TermsOfService.PleaseAccept")</p>
                        </div>
                        <div class="terms-of-service">
                            <input id="termsofservice" type="checkbox" name="termsofservice" />
                            <label for="termsofservice">@T("Checkout.TermsOfService.IAccept")</label>
                            @if (Model.TermsOfServicePopup)
                            {
                                <a class="read" id="read-terms">@T("Checkout.TermsOfService.Read")</a>
                                <script type="text/javascript" asp-location="Footer">
                                    $(document).ready(function() {
                                        $('#read-terms').on('click',
                                            function(e) {
                                                e.preventDefault();
                                                displayPopupContentFromUrl('@Url.RouteUrl("TopicPopup", new {SystemName = "conditionsofuse"})', '@T("Checkout.TermsOfService")');
                                            });
                                    });
                                </script>
                            }
                            else
                            {
                                <a class="read" id="read-terms" href="@Url.RouteUrl("Topic", new {SeName = Html.GetTopicSeName("conditionsofuse") })">@T("Checkout.TermsOfService.Read")</a>
                            }
                        </div>
                    }

                    <script type="text/javascript" asp-location="Footer">
                        $('#confirm-order-form').on('submit',
                            function () {
                                var button = $(this).find('input[type="submit"][name="nextstep"]');
                                setTimeout(function () {
                                    button.attr('disabled', 'disabled');
                                },
                                    0);
                            });
                    </script>
                }
                <div class="buttons">
                    <input type="submit" name="nextstep" value="@T("Checkout.ConfirmButton")" class="button-1 confirm-order-next-step-button" />
                </div>
                @if (Model.Warnings.Count > 0)
                {
                    <div class="message-error">
                        <ul>
                            @foreach (var warning in Model.Warnings)
                            {
                                <li>@warning</li>
                            }
                        </ul>
                    </div>
                }
            </div>
            <div class="section order-summary">
                @if (Step > 0)
                {
                    @await Component.InvokeAsync("Mus_OrderSummaryShipmentConfirm", new { prepareAndDisplayOrderReviewData = true })
                }
                else
                {
                    @await Component.InvokeAsync("OrderSummary", new { prepareAndDisplayOrderReviewData = true })
                }

            </div>

            @await Component.InvokeAsync("Widget", new { widgetZone = "checkout_confirm_bottom" })
            
            <br /><br />

        </div>
    </form>

</div>