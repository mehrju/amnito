//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Nop.plugin.Orders.ExtendedShipment.SendToPostDataService {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SendToPostDataService.MassContractsServiceSoap")]
    public interface MassContractsServiceSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Send_Bajeh", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Nop.plugin.Orders.ExtendedShipment.SendToPostDataService.Send_BajehResponse Send_Bajeh(Nop.plugin.Orders.ExtendedShipment.SendToPostDataService.Send_BajehRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Send_Bajeh", ReplyAction="*")]
        System.Threading.Tasks.Task<Nop.plugin.Orders.ExtendedShipment.SendToPostDataService.Send_BajehResponse> Send_BajehAsync(Nop.plugin.Orders.ExtendedShipment.SendToPostDataService.Send_BajehRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Send_KhoshData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Nop.plugin.Orders.ExtendedShipment.SendToPostDataService.Send_KhoshDataResponse Send_KhoshData(Nop.plugin.Orders.ExtendedShipment.SendToPostDataService.Send_KhoshDataRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Send_KhoshData", ReplyAction="*")]
        System.Threading.Tasks.Task<Nop.plugin.Orders.ExtendedShipment.SendToPostDataService.Send_KhoshDataResponse> Send_KhoshDataAsync(Nop.plugin.Orders.ExtendedShipment.SendToPostDataService.Send_KhoshDataRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Send_KhoshDataNormal", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Nop.plugin.Orders.ExtendedShipment.SendToPostDataService.Send_KhoshDataNormalResponse Send_KhoshDataNormal(Nop.plugin.Orders.ExtendedShipment.SendToPostDataService.Send_KhoshDataNormalRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Send_KhoshDataNormal", ReplyAction="*")]
        System.Threading.Tasks.Task<Nop.plugin.Orders.ExtendedShipment.SendToPostDataService.Send_KhoshDataNormalResponse> Send_KhoshDataNormalAsync(Nop.plugin.Orders.ExtendedShipment.SendToPostDataService.Send_KhoshDataNormalRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Send_MassKhoshData_Date", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Nop.plugin.Orders.ExtendedShipment.SendToPostDataService.Send_MassKhoshData_DateResponse Send_MassKhoshData_Date(Nop.plugin.Orders.ExtendedShipment.SendToPostDataService.Send_MassKhoshData_DateRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Send_MassKhoshData_Date", ReplyAction="*")]
        System.Threading.Tasks.Task<Nop.plugin.Orders.ExtendedShipment.SendToPostDataService.Send_MassKhoshData_DateResponse> Send_MassKhoshData_DateAsync(Nop.plugin.Orders.ExtendedShipment.SendToPostDataService.Send_MassKhoshData_DateRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Send_MassKhoshData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Nop.plugin.Orders.ExtendedShipment.SendToPostDataService.Send_MassKhoshDataResponse Send_MassKhoshData(Nop.plugin.Orders.ExtendedShipment.SendToPostDataService.Send_MassKhoshDataRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Send_MassKhoshData", ReplyAction="*")]
        System.Threading.Tasks.Task<Nop.plugin.Orders.ExtendedShipment.SendToPostDataService.Send_MassKhoshDataResponse> Send_MassKhoshDataAsync(Nop.plugin.Orders.ExtendedShipment.SendToPostDataService.Send_MassKhoshDataRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PushKHoshData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string PushKHoshData(System.Data.DataSet ConstContractDT, string UserName, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PushKHoshData", ReplyAction="*")]
        System.Threading.Tasks.Task<string> PushKHoshDataAsync(System.Data.DataSet ConstContractDT, string UserName, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PushConstContractParcels", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string PushConstContractParcels(System.Data.DataSet ConstContractDT, string ContractCode, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PushConstContractParcels", ReplyAction="*")]
        System.Threading.Tasks.Task<string> PushConstContractParcelsAsync(System.Data.DataSet ConstContractDT, string ContractCode, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PushConstContractParcels_V2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string PushConstContractParcels_V2(System.Data.DataSet ConstContractDT, string ContractCode, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PushConstContractParcels_V2", ReplyAction="*")]
        System.Threading.Tasks.Task<string> PushConstContractParcels_V2Async(System.Data.DataSet ConstContractDT, string ContractCode, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PushConst2Barcode", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string PushConst2Barcode(System.Data.DataSet ConstContractDT, string ContractCode, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PushConst2Barcode", ReplyAction="*")]
        System.Threading.Tasks.Task<string> PushConst2BarcodeAsync(System.Data.DataSet ConstContractDT, string ContractCode, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PushMellatNotices", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string PushMellatNotices(string ContractCode, string Password, int DistributedNotices, int ReturnsNotices, int UndecidedNotices, int RelapseNotices, string ReceiptDate, int State_code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PushMellatNotices", ReplyAction="*")]
        System.Threading.Tasks.Task<string> PushMellatNoticesAsync(string ContractCode, string Password, int DistributedNotices, int ReturnsNotices, int UndecidedNotices, int RelapseNotices, string ReceiptDate, int State_code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PushVarContractParcels", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string PushVarContractParcels(System.Data.DataSet VarContractDT, string ContractCode, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PushVarContractParcels", ReplyAction="*")]
        System.Threading.Tasks.Task<string> PushVarContractParcelsAsync(System.Data.DataSet VarContractDT, string ContractCode, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PushVarContractParcels_V2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string PushVarContractParcels_V2(System.Data.DataSet VarContractDT, string ContractCode, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PushVarContractParcels_V2", ReplyAction="*")]
        System.Threading.Tasks.Task<string> PushVarContractParcels_V2Async(System.Data.DataSet VarContractDT, string ContractCode, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PushTaxiData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string PushTaxiData(System.Data.DataSet VarContractDT, string ContractCode, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PushTaxiData", ReplyAction="*")]
        System.Threading.Tasks.Task<string> PushTaxiDataAsync(System.Data.DataSet VarContractDT, string ContractCode, string Password);
        
        // CODEGEN: Parameter 'VarArray' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlArrayItemAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PushVarArray_SMS", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Nop.plugin.Orders.ExtendedShipment.SendToPostDataService.PushVarArray_SMSResponse PushVarArray_SMS(Nop.plugin.Orders.ExtendedShipment.SendToPostDataService.PushVarArray_SMSRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PushVarArray_SMS", ReplyAction="*")]
        System.Threading.Tasks.Task<Nop.plugin.Orders.ExtendedShipment.SendToPostDataService.PushVarArray_SMSResponse> PushVarArray_SMSAsync(Nop.plugin.Orders.ExtendedShipment.SendToPostDataService.PushVarArray_SMSRequest request);
        
        // CODEGEN: Parameter 'VarArray' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlArrayItemAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PushVarArray_SMS_v2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Nop.plugin.Orders.ExtendedShipment.SendToPostDataService.PushVarArray_SMS_v2Response PushVarArray_SMS_v2(Nop.plugin.Orders.ExtendedShipment.SendToPostDataService.PushVarArray_SMS_v2Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PushVarArray_SMS_v2", ReplyAction="*")]
        System.Threading.Tasks.Task<Nop.plugin.Orders.ExtendedShipment.SendToPostDataService.PushVarArray_SMS_v2Response> PushVarArray_SMS_v2Async(Nop.plugin.Orders.ExtendedShipment.SendToPostDataService.PushVarArray_SMS_v2Request request);
        
        // CODEGEN: Parameter 'VarArray' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlArrayItemAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PushVarArray", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Nop.plugin.Orders.ExtendedShipment.SendToPostDataService.PushVarArrayResponse PushVarArray(Nop.plugin.Orders.ExtendedShipment.SendToPostDataService.PushVarArrayRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PushVarArray", ReplyAction="*")]
        System.Threading.Tasks.Task<Nop.plugin.Orders.ExtendedShipment.SendToPostDataService.PushVarArrayResponse> PushVarArrayAsync(Nop.plugin.Orders.ExtendedShipment.SendToPostDataService.PushVarArrayRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PushGateWayParcels", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string PushGateWayParcels(System.Data.DataSet VarContractDT, string ContractCode, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PushGateWayParcels", ReplyAction="*")]
        System.Threading.Tasks.Task<string> PushGateWayParcelsAsync(System.Data.DataSet VarContractDT, string ContractCode, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PushVarContractParcels_SMS", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string PushVarContractParcels_SMS(System.Data.DataSet VarContractDT, string ContractCode, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PushVarContractParcels_SMS", ReplyAction="*")]
        System.Threading.Tasks.Task<string> PushVarContractParcels_SMSAsync(System.Data.DataSet VarContractDT, string ContractCode, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PushVarContractParcels_SMS_V2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string PushVarContractParcels_SMS_V2(System.Data.DataSet VarContractDT, string ContractCode, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PushVarContractParcels_SMS_V2", ReplyAction="*")]
        System.Threading.Tasks.Task<string> PushVarContractParcels_SMS_V2Async(System.Data.DataSet VarContractDT, string ContractCode, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PushPostalCodeData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string PushPostalCodeData(System.Data.DataSet PostalCodeData, string UserName, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PushPostalCodeData", ReplyAction="*")]
        System.Threading.Tasks.Task<string> PushPostalCodeDataAsync(System.Data.DataSet PostalCodeData, string UserName, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Get_ParcelPrice", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Nop.plugin.Orders.ExtendedShipment.SendToPostDataService.Get_ParcelPriceResponse Get_ParcelPrice(Nop.plugin.Orders.ExtendedShipment.SendToPostDataService.Get_ParcelPriceRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Get_ParcelPrice", ReplyAction="*")]
        System.Threading.Tasks.Task<Nop.plugin.Orders.ExtendedShipment.SendToPostDataService.Get_ParcelPriceResponse> Get_ParcelPriceAsync(Nop.plugin.Orders.ExtendedShipment.SendToPostDataService.Get_ParcelPriceRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PushPishkhanData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string PushPishkhanData(string UserName, string Password, string RID, int PostNodeCode, string RDate, int type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PushPishkhanData", ReplyAction="*")]
        System.Threading.Tasks.Task<string> PushPishkhanDataAsync(string UserName, string Password, string RID, int PostNodeCode, string RDate, int type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Get_PostNodeData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Get_PostNodeData(string UserName, string Password, string Pname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Get_PostNodeData", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> Get_PostNodeDataAsync(string UserName, string Password, string Pname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SetContractAccounts", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SetContractAccounts(string ContractCode, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SetContractAccounts", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SetContractAccountsAsync(string ContractCode, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SetContractIpAddresses", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SetContractIpAddresses(string ContractCode, string IP);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SetContractIpAddresses", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SetContractIpAddressesAsync(string ContractCode, string IP);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SetContractPostNodes", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SetContractPostNodes(string ContractCode, string PostCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SetContractPostNodes", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SetContractPostNodesAsync(string ContractCode, string PostCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SetContractsInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SetContractsInfo(string ContractCode, string ContractName, int OrganizationCode, string StartDate, string EndDate, int ServiceType, int ExecuterCode, string TotalCost, string PostPortion, string ContractorPortion, string Tax, int Weight, int PostalCostCategoryID, char PostalCostTypeFlag, int InsuranceCost);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SetContractsInfo", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SetContractsInfoAsync(string ContractCode, string ContractName, int OrganizationCode, string StartDate, string EndDate, int ServiceType, int ExecuterCode, string TotalCost, string PostPortion, string ContractorPortion, string Tax, int Weight, int PostalCostCategoryID, char PostalCostTypeFlag, int InsuranceCost);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SetOrganizaitionInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SetOrganizaitionInfo(string OrganizationName, int OrganizationCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SetOrganizaitionInfo", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SetOrganizaitionInfoAsync(string OrganizationName, int OrganizationCode);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Send_Bajeh", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class Send_BajehRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string Username;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string Password;
        
        public Send_BajehRequest() {
        }
        
        public Send_BajehRequest(string Username, string Password) {
            this.Username = Username;
            this.Password = Password;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Send_BajehResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class Send_BajehResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public System.Data.DataSet Send_BajehResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string errortext;
        
        public Send_BajehResponse() {
        }
        
        public Send_BajehResponse(System.Data.DataSet Send_BajehResult, string errortext) {
            this.Send_BajehResult = Send_BajehResult;
            this.errortext = errortext;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Send_KhoshData", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class Send_KhoshDataRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string Username;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string Password;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string barcode;
        
        public Send_KhoshDataRequest() {
        }
        
        public Send_KhoshDataRequest(string Username, string Password, string barcode) {
            this.Username = Username;
            this.Password = Password;
            this.barcode = barcode;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Send_KhoshDataResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class Send_KhoshDataResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public System.Data.DataSet Send_KhoshDataResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string errortext;
        
        public Send_KhoshDataResponse() {
        }
        
        public Send_KhoshDataResponse(System.Data.DataSet Send_KhoshDataResult, string errortext) {
            this.Send_KhoshDataResult = Send_KhoshDataResult;
            this.errortext = errortext;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Send_KhoshDataNormal", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class Send_KhoshDataNormalRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string Username;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string Password;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string FromDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public string ToDate;
        
        public Send_KhoshDataNormalRequest() {
        }
        
        public Send_KhoshDataNormalRequest(string Username, string Password, string FromDate, string ToDate) {
            this.Username = Username;
            this.Password = Password;
            this.FromDate = FromDate;
            this.ToDate = ToDate;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Send_KhoshDataNormalResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class Send_KhoshDataNormalResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public System.Data.DataSet Send_KhoshDataNormalResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string errortext;
        
        public Send_KhoshDataNormalResponse() {
        }
        
        public Send_KhoshDataNormalResponse(System.Data.DataSet Send_KhoshDataNormalResult, string errortext) {
            this.Send_KhoshDataNormalResult = Send_KhoshDataNormalResult;
            this.errortext = errortext;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Send_MassKhoshData_Date", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class Send_MassKhoshData_DateRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string Username;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string Password;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string FromDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public string ToDate;
        
        public Send_MassKhoshData_DateRequest() {
        }
        
        public Send_MassKhoshData_DateRequest(string Username, string Password, string FromDate, string ToDate) {
            this.Username = Username;
            this.Password = Password;
            this.FromDate = FromDate;
            this.ToDate = ToDate;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Send_MassKhoshData_DateResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class Send_MassKhoshData_DateResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public System.Data.DataSet Send_MassKhoshData_DateResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string errortext;
        
        public Send_MassKhoshData_DateResponse() {
        }
        
        public Send_MassKhoshData_DateResponse(System.Data.DataSet Send_MassKhoshData_DateResult, string errortext) {
            this.Send_MassKhoshData_DateResult = Send_MassKhoshData_DateResult;
            this.errortext = errortext;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Send_MassKhoshData", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class Send_MassKhoshDataRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string Username;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string Password;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public int ReferenceCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public int PostNodeCode;
        
        public Send_MassKhoshDataRequest() {
        }
        
        public Send_MassKhoshDataRequest(string Username, string Password, int ReferenceCode, int PostNodeCode) {
            this.Username = Username;
            this.Password = Password;
            this.ReferenceCode = ReferenceCode;
            this.PostNodeCode = PostNodeCode;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Send_MassKhoshDataResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class Send_MassKhoshDataResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public System.Data.DataSet Send_MassKhoshDataResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string errortext;
        
        public Send_MassKhoshDataResponse() {
        }
        
        public Send_MassKhoshDataResponse(System.Data.DataSet Send_MassKhoshDataResult, string errortext) {
            this.Send_MassKhoshDataResult = Send_MassKhoshDataResult;
            this.errortext = errortext;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="PushVarArray_SMS", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class PushVarArray_SMSRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfString")]
        [System.Xml.Serialization.XmlArrayItemAttribute(NestingLevel=1)]
        public string[][] VarArray;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string ContractCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string Password;
        
        public PushVarArray_SMSRequest() {
        }
        
        public PushVarArray_SMSRequest(string[][] VarArray, string ContractCode, string Password) {
            this.VarArray = VarArray;
            this.ContractCode = ContractCode;
            this.Password = Password;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="PushVarArray_SMSResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class PushVarArray_SMSResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string PushVarArray_SMSResult;
        
        public PushVarArray_SMSResponse() {
        }
        
        public PushVarArray_SMSResponse(string PushVarArray_SMSResult) {
            this.PushVarArray_SMSResult = PushVarArray_SMSResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="PushVarArray_SMS_v2", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class PushVarArray_SMS_v2Request {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfString")]
        [System.Xml.Serialization.XmlArrayItemAttribute(NestingLevel=1)]
        public string[][] VarArray;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string ContractCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string Password;
        
        public PushVarArray_SMS_v2Request() {
        }
        
        public PushVarArray_SMS_v2Request(string[][] VarArray, string ContractCode, string Password) {
            this.VarArray = VarArray;
            this.ContractCode = ContractCode;
            this.Password = Password;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="PushVarArray_SMS_v2Response", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class PushVarArray_SMS_v2Response {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string PushVarArray_SMS_v2Result;
        
        public PushVarArray_SMS_v2Response() {
        }
        
        public PushVarArray_SMS_v2Response(string PushVarArray_SMS_v2Result) {
            this.PushVarArray_SMS_v2Result = PushVarArray_SMS_v2Result;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="PushVarArray", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class PushVarArrayRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfString")]
        [System.Xml.Serialization.XmlArrayItemAttribute(NestingLevel=1)]
        public string[][] VarArray;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string ContractCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string Password;
        
        public PushVarArrayRequest() {
        }
        
        public PushVarArrayRequest(string[][] VarArray, string ContractCode, string Password) {
            this.VarArray = VarArray;
            this.ContractCode = ContractCode;
            this.Password = Password;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="PushVarArrayResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class PushVarArrayResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string PushVarArrayResult;
        
        public PushVarArrayResponse() {
        }
        
        public PushVarArrayResponse(string PushVarArrayResult) {
            this.PushVarArrayResult = PushVarArrayResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Get_ParcelPrice", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class Get_ParcelPriceRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string barcode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string UserName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string Password;
        
        public Get_ParcelPriceRequest() {
        }
        
        public Get_ParcelPriceRequest(string barcode, string UserName, string Password) {
            this.barcode = barcode;
            this.UserName = UserName;
            this.Password = Password;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Get_ParcelPriceResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class Get_ParcelPriceResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public System.Data.DataSet Get_ParcelPriceResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string ErrorText;
        
        public Get_ParcelPriceResponse() {
        }
        
        public Get_ParcelPriceResponse(System.Data.DataSet Get_ParcelPriceResult, string ErrorText) {
            this.Get_ParcelPriceResult = Get_ParcelPriceResult;
            this.ErrorText = ErrorText;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface MassContractsServiceSoapChannel : Nop.plugin.Orders.ExtendedShipment.SendToPostDataService.MassContractsServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MassContractsServiceSoapClient : System.ServiceModel.ClientBase<Nop.plugin.Orders.ExtendedShipment.SendToPostDataService.MassContractsServiceSoap>, Nop.plugin.Orders.ExtendedShipment.SendToPostDataService.MassContractsServiceSoap {
        
        public MassContractsServiceSoapClient() {
        }
        
        public MassContractsServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MassContractsServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MassContractsServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MassContractsServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Nop.plugin.Orders.ExtendedShipment.SendToPostDataService.Send_BajehResponse Nop.plugin.Orders.ExtendedShipment.SendToPostDataService.MassContractsServiceSoap.Send_Bajeh(Nop.plugin.Orders.ExtendedShipment.SendToPostDataService.Send_BajehRequest request) {
            return base.Channel.Send_Bajeh(request);
        }
        
        public System.Data.DataSet Send_Bajeh(string Username, string Password, out string errortext) {
            Nop.plugin.Orders.ExtendedShipment.SendToPostDataService.Send_BajehRequest inValue = new Nop.plugin.Orders.ExtendedShipment.SendToPostDataService.Send_BajehRequest();
            inValue.Username = Username;
            inValue.Password = Password;
            Nop.plugin.Orders.ExtendedShipment.SendToPostDataService.Send_BajehResponse retVal = ((Nop.plugin.Orders.ExtendedShipment.SendToPostDataService.MassContractsServiceSoap)(this)).Send_Bajeh(inValue);
            errortext = retVal.errortext;
            return retVal.Send_BajehResult;
        }
        
        public System.Threading.Tasks.Task<Nop.plugin.Orders.ExtendedShipment.SendToPostDataService.Send_BajehResponse> Send_BajehAsync(Nop.plugin.Orders.ExtendedShipment.SendToPostDataService.Send_BajehRequest request) {
            return base.Channel.Send_BajehAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Nop.plugin.Orders.ExtendedShipment.SendToPostDataService.Send_KhoshDataResponse Nop.plugin.Orders.ExtendedShipment.SendToPostDataService.MassContractsServiceSoap.Send_KhoshData(Nop.plugin.Orders.ExtendedShipment.SendToPostDataService.Send_KhoshDataRequest request) {
            return base.Channel.Send_KhoshData(request);
        }
        
        public System.Data.DataSet Send_KhoshData(string Username, string Password, string barcode, out string errortext) {
            Nop.plugin.Orders.ExtendedShipment.SendToPostDataService.Send_KhoshDataRequest inValue = new Nop.plugin.Orders.ExtendedShipment.SendToPostDataService.Send_KhoshDataRequest();
            inValue.Username = Username;
            inValue.Password = Password;
            inValue.barcode = barcode;
            Nop.plugin.Orders.ExtendedShipment.SendToPostDataService.Send_KhoshDataResponse retVal = ((Nop.plugin.Orders.ExtendedShipment.SendToPostDataService.MassContractsServiceSoap)(this)).Send_KhoshData(inValue);
            errortext = retVal.errortext;
            return retVal.Send_KhoshDataResult;
        }
        
        public System.Threading.Tasks.Task<Nop.plugin.Orders.ExtendedShipment.SendToPostDataService.Send_KhoshDataResponse> Send_KhoshDataAsync(Nop.plugin.Orders.ExtendedShipment.SendToPostDataService.Send_KhoshDataRequest request) {
            return base.Channel.Send_KhoshDataAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Nop.plugin.Orders.ExtendedShipment.SendToPostDataService.Send_KhoshDataNormalResponse Nop.plugin.Orders.ExtendedShipment.SendToPostDataService.MassContractsServiceSoap.Send_KhoshDataNormal(Nop.plugin.Orders.ExtendedShipment.SendToPostDataService.Send_KhoshDataNormalRequest request) {
            return base.Channel.Send_KhoshDataNormal(request);
        }
        
        public System.Data.DataSet Send_KhoshDataNormal(string Username, string Password, string FromDate, string ToDate, out string errortext) {
            Nop.plugin.Orders.ExtendedShipment.SendToPostDataService.Send_KhoshDataNormalRequest inValue = new Nop.plugin.Orders.ExtendedShipment.SendToPostDataService.Send_KhoshDataNormalRequest();
            inValue.Username = Username;
            inValue.Password = Password;
            inValue.FromDate = FromDate;
            inValue.ToDate = ToDate;
            Nop.plugin.Orders.ExtendedShipment.SendToPostDataService.Send_KhoshDataNormalResponse retVal = ((Nop.plugin.Orders.ExtendedShipment.SendToPostDataService.MassContractsServiceSoap)(this)).Send_KhoshDataNormal(inValue);
            errortext = retVal.errortext;
            return retVal.Send_KhoshDataNormalResult;
        }
        
        public System.Threading.Tasks.Task<Nop.plugin.Orders.ExtendedShipment.SendToPostDataService.Send_KhoshDataNormalResponse> Send_KhoshDataNormalAsync(Nop.plugin.Orders.ExtendedShipment.SendToPostDataService.Send_KhoshDataNormalRequest request) {
            return base.Channel.Send_KhoshDataNormalAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Nop.plugin.Orders.ExtendedShipment.SendToPostDataService.Send_MassKhoshData_DateResponse Nop.plugin.Orders.ExtendedShipment.SendToPostDataService.MassContractsServiceSoap.Send_MassKhoshData_Date(Nop.plugin.Orders.ExtendedShipment.SendToPostDataService.Send_MassKhoshData_DateRequest request) {
            return base.Channel.Send_MassKhoshData_Date(request);
        }
        
        public System.Data.DataSet Send_MassKhoshData_Date(string Username, string Password, string FromDate, string ToDate, out string errortext) {
            Nop.plugin.Orders.ExtendedShipment.SendToPostDataService.Send_MassKhoshData_DateRequest inValue = new Nop.plugin.Orders.ExtendedShipment.SendToPostDataService.Send_MassKhoshData_DateRequest();
            inValue.Username = Username;
            inValue.Password = Password;
            inValue.FromDate = FromDate;
            inValue.ToDate = ToDate;
            Nop.plugin.Orders.ExtendedShipment.SendToPostDataService.Send_MassKhoshData_DateResponse retVal = ((Nop.plugin.Orders.ExtendedShipment.SendToPostDataService.MassContractsServiceSoap)(this)).Send_MassKhoshData_Date(inValue);
            errortext = retVal.errortext;
            return retVal.Send_MassKhoshData_DateResult;
        }
        
        public System.Threading.Tasks.Task<Nop.plugin.Orders.ExtendedShipment.SendToPostDataService.Send_MassKhoshData_DateResponse> Send_MassKhoshData_DateAsync(Nop.plugin.Orders.ExtendedShipment.SendToPostDataService.Send_MassKhoshData_DateRequest request) {
            return base.Channel.Send_MassKhoshData_DateAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Nop.plugin.Orders.ExtendedShipment.SendToPostDataService.Send_MassKhoshDataResponse Nop.plugin.Orders.ExtendedShipment.SendToPostDataService.MassContractsServiceSoap.Send_MassKhoshData(Nop.plugin.Orders.ExtendedShipment.SendToPostDataService.Send_MassKhoshDataRequest request) {
            return base.Channel.Send_MassKhoshData(request);
        }
        
        public System.Data.DataSet Send_MassKhoshData(string Username, string Password, int ReferenceCode, int PostNodeCode, out string errortext) {
            Nop.plugin.Orders.ExtendedShipment.SendToPostDataService.Send_MassKhoshDataRequest inValue = new Nop.plugin.Orders.ExtendedShipment.SendToPostDataService.Send_MassKhoshDataRequest();
            inValue.Username = Username;
            inValue.Password = Password;
            inValue.ReferenceCode = ReferenceCode;
            inValue.PostNodeCode = PostNodeCode;
            Nop.plugin.Orders.ExtendedShipment.SendToPostDataService.Send_MassKhoshDataResponse retVal = ((Nop.plugin.Orders.ExtendedShipment.SendToPostDataService.MassContractsServiceSoap)(this)).Send_MassKhoshData(inValue);
            errortext = retVal.errortext;
            return retVal.Send_MassKhoshDataResult;
        }
        
        public System.Threading.Tasks.Task<Nop.plugin.Orders.ExtendedShipment.SendToPostDataService.Send_MassKhoshDataResponse> Send_MassKhoshDataAsync(Nop.plugin.Orders.ExtendedShipment.SendToPostDataService.Send_MassKhoshDataRequest request) {
            return base.Channel.Send_MassKhoshDataAsync(request);
        }
        
        public string PushKHoshData(System.Data.DataSet ConstContractDT, string UserName, string Password) {
            return base.Channel.PushKHoshData(ConstContractDT, UserName, Password);
        }
        
        public System.Threading.Tasks.Task<string> PushKHoshDataAsync(System.Data.DataSet ConstContractDT, string UserName, string Password) {
            return base.Channel.PushKHoshDataAsync(ConstContractDT, UserName, Password);
        }
        
        public string PushConstContractParcels(System.Data.DataSet ConstContractDT, string ContractCode, string Password) {
            return base.Channel.PushConstContractParcels(ConstContractDT, ContractCode, Password);
        }
        
        public System.Threading.Tasks.Task<string> PushConstContractParcelsAsync(System.Data.DataSet ConstContractDT, string ContractCode, string Password) {
            return base.Channel.PushConstContractParcelsAsync(ConstContractDT, ContractCode, Password);
        }
        
        public string PushConstContractParcels_V2(System.Data.DataSet ConstContractDT, string ContractCode, string Password) {
            return base.Channel.PushConstContractParcels_V2(ConstContractDT, ContractCode, Password);
        }
        
        public System.Threading.Tasks.Task<string> PushConstContractParcels_V2Async(System.Data.DataSet ConstContractDT, string ContractCode, string Password) {
            return base.Channel.PushConstContractParcels_V2Async(ConstContractDT, ContractCode, Password);
        }
        
        public string PushConst2Barcode(System.Data.DataSet ConstContractDT, string ContractCode, string Password) {
            return base.Channel.PushConst2Barcode(ConstContractDT, ContractCode, Password);
        }
        
        public System.Threading.Tasks.Task<string> PushConst2BarcodeAsync(System.Data.DataSet ConstContractDT, string ContractCode, string Password) {
            return base.Channel.PushConst2BarcodeAsync(ConstContractDT, ContractCode, Password);
        }
        
        public string PushMellatNotices(string ContractCode, string Password, int DistributedNotices, int ReturnsNotices, int UndecidedNotices, int RelapseNotices, string ReceiptDate, int State_code) {
            return base.Channel.PushMellatNotices(ContractCode, Password, DistributedNotices, ReturnsNotices, UndecidedNotices, RelapseNotices, ReceiptDate, State_code);
        }
        
        public System.Threading.Tasks.Task<string> PushMellatNoticesAsync(string ContractCode, string Password, int DistributedNotices, int ReturnsNotices, int UndecidedNotices, int RelapseNotices, string ReceiptDate, int State_code) {
            return base.Channel.PushMellatNoticesAsync(ContractCode, Password, DistributedNotices, ReturnsNotices, UndecidedNotices, RelapseNotices, ReceiptDate, State_code);
        }
        
        public string PushVarContractParcels(System.Data.DataSet VarContractDT, string ContractCode, string Password) {
            return base.Channel.PushVarContractParcels(VarContractDT, ContractCode, Password);
        }
        
        public System.Threading.Tasks.Task<string> PushVarContractParcelsAsync(System.Data.DataSet VarContractDT, string ContractCode, string Password) {
            return base.Channel.PushVarContractParcelsAsync(VarContractDT, ContractCode, Password);
        }
        
        public string PushVarContractParcels_V2(System.Data.DataSet VarContractDT, string ContractCode, string Password) {
            return base.Channel.PushVarContractParcels_V2(VarContractDT, ContractCode, Password);
        }
        
        public System.Threading.Tasks.Task<string> PushVarContractParcels_V2Async(System.Data.DataSet VarContractDT, string ContractCode, string Password) {
            return base.Channel.PushVarContractParcels_V2Async(VarContractDT, ContractCode, Password);
        }
        
        public string PushTaxiData(System.Data.DataSet VarContractDT, string ContractCode, string Password) {
            return base.Channel.PushTaxiData(VarContractDT, ContractCode, Password);
        }
        
        public System.Threading.Tasks.Task<string> PushTaxiDataAsync(System.Data.DataSet VarContractDT, string ContractCode, string Password) {
            return base.Channel.PushTaxiDataAsync(VarContractDT, ContractCode, Password);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Nop.plugin.Orders.ExtendedShipment.SendToPostDataService.PushVarArray_SMSResponse Nop.plugin.Orders.ExtendedShipment.SendToPostDataService.MassContractsServiceSoap.PushVarArray_SMS(Nop.plugin.Orders.ExtendedShipment.SendToPostDataService.PushVarArray_SMSRequest request) {
            return base.Channel.PushVarArray_SMS(request);
        }
        
        public string PushVarArray_SMS(string[][] VarArray, string ContractCode, string Password) {
            Nop.plugin.Orders.ExtendedShipment.SendToPostDataService.PushVarArray_SMSRequest inValue = new Nop.plugin.Orders.ExtendedShipment.SendToPostDataService.PushVarArray_SMSRequest();
            inValue.VarArray = VarArray;
            inValue.ContractCode = ContractCode;
            inValue.Password = Password;
            Nop.plugin.Orders.ExtendedShipment.SendToPostDataService.PushVarArray_SMSResponse retVal = ((Nop.plugin.Orders.ExtendedShipment.SendToPostDataService.MassContractsServiceSoap)(this)).PushVarArray_SMS(inValue);
            return retVal.PushVarArray_SMSResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Nop.plugin.Orders.ExtendedShipment.SendToPostDataService.PushVarArray_SMSResponse> Nop.plugin.Orders.ExtendedShipment.SendToPostDataService.MassContractsServiceSoap.PushVarArray_SMSAsync(Nop.plugin.Orders.ExtendedShipment.SendToPostDataService.PushVarArray_SMSRequest request) {
            return base.Channel.PushVarArray_SMSAsync(request);
        }
        
        public System.Threading.Tasks.Task<Nop.plugin.Orders.ExtendedShipment.SendToPostDataService.PushVarArray_SMSResponse> PushVarArray_SMSAsync(string[][] VarArray, string ContractCode, string Password) {
            Nop.plugin.Orders.ExtendedShipment.SendToPostDataService.PushVarArray_SMSRequest inValue = new Nop.plugin.Orders.ExtendedShipment.SendToPostDataService.PushVarArray_SMSRequest();
            inValue.VarArray = VarArray;
            inValue.ContractCode = ContractCode;
            inValue.Password = Password;
            return ((Nop.plugin.Orders.ExtendedShipment.SendToPostDataService.MassContractsServiceSoap)(this)).PushVarArray_SMSAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Nop.plugin.Orders.ExtendedShipment.SendToPostDataService.PushVarArray_SMS_v2Response Nop.plugin.Orders.ExtendedShipment.SendToPostDataService.MassContractsServiceSoap.PushVarArray_SMS_v2(Nop.plugin.Orders.ExtendedShipment.SendToPostDataService.PushVarArray_SMS_v2Request request) {
            return base.Channel.PushVarArray_SMS_v2(request);
        }
        
        public string PushVarArray_SMS_v2(string[][] VarArray, string ContractCode, string Password) {
            Nop.plugin.Orders.ExtendedShipment.SendToPostDataService.PushVarArray_SMS_v2Request inValue = new Nop.plugin.Orders.ExtendedShipment.SendToPostDataService.PushVarArray_SMS_v2Request();
            inValue.VarArray = VarArray;
            inValue.ContractCode = ContractCode;
            inValue.Password = Password;
            Nop.plugin.Orders.ExtendedShipment.SendToPostDataService.PushVarArray_SMS_v2Response retVal = ((Nop.plugin.Orders.ExtendedShipment.SendToPostDataService.MassContractsServiceSoap)(this)).PushVarArray_SMS_v2(inValue);
            return retVal.PushVarArray_SMS_v2Result;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Nop.plugin.Orders.ExtendedShipment.SendToPostDataService.PushVarArray_SMS_v2Response> Nop.plugin.Orders.ExtendedShipment.SendToPostDataService.MassContractsServiceSoap.PushVarArray_SMS_v2Async(Nop.plugin.Orders.ExtendedShipment.SendToPostDataService.PushVarArray_SMS_v2Request request) {
            return base.Channel.PushVarArray_SMS_v2Async(request);
        }
        
        public System.Threading.Tasks.Task<Nop.plugin.Orders.ExtendedShipment.SendToPostDataService.PushVarArray_SMS_v2Response> PushVarArray_SMS_v2Async(string[][] VarArray, string ContractCode, string Password) {
            Nop.plugin.Orders.ExtendedShipment.SendToPostDataService.PushVarArray_SMS_v2Request inValue = new Nop.plugin.Orders.ExtendedShipment.SendToPostDataService.PushVarArray_SMS_v2Request();
            inValue.VarArray = VarArray;
            inValue.ContractCode = ContractCode;
            inValue.Password = Password;
            return ((Nop.plugin.Orders.ExtendedShipment.SendToPostDataService.MassContractsServiceSoap)(this)).PushVarArray_SMS_v2Async(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Nop.plugin.Orders.ExtendedShipment.SendToPostDataService.PushVarArrayResponse Nop.plugin.Orders.ExtendedShipment.SendToPostDataService.MassContractsServiceSoap.PushVarArray(Nop.plugin.Orders.ExtendedShipment.SendToPostDataService.PushVarArrayRequest request) {
            return base.Channel.PushVarArray(request);
        }
        
        public string PushVarArray(string[][] VarArray, string ContractCode, string Password) {
            Nop.plugin.Orders.ExtendedShipment.SendToPostDataService.PushVarArrayRequest inValue = new Nop.plugin.Orders.ExtendedShipment.SendToPostDataService.PushVarArrayRequest();
            inValue.VarArray = VarArray;
            inValue.ContractCode = ContractCode;
            inValue.Password = Password;
            Nop.plugin.Orders.ExtendedShipment.SendToPostDataService.PushVarArrayResponse retVal = ((Nop.plugin.Orders.ExtendedShipment.SendToPostDataService.MassContractsServiceSoap)(this)).PushVarArray(inValue);
            return retVal.PushVarArrayResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Nop.plugin.Orders.ExtendedShipment.SendToPostDataService.PushVarArrayResponse> Nop.plugin.Orders.ExtendedShipment.SendToPostDataService.MassContractsServiceSoap.PushVarArrayAsync(Nop.plugin.Orders.ExtendedShipment.SendToPostDataService.PushVarArrayRequest request) {
            return base.Channel.PushVarArrayAsync(request);
        }
        
        public System.Threading.Tasks.Task<Nop.plugin.Orders.ExtendedShipment.SendToPostDataService.PushVarArrayResponse> PushVarArrayAsync(string[][] VarArray, string ContractCode, string Password) {
            Nop.plugin.Orders.ExtendedShipment.SendToPostDataService.PushVarArrayRequest inValue = new Nop.plugin.Orders.ExtendedShipment.SendToPostDataService.PushVarArrayRequest();
            inValue.VarArray = VarArray;
            inValue.ContractCode = ContractCode;
            inValue.Password = Password;
            return ((Nop.plugin.Orders.ExtendedShipment.SendToPostDataService.MassContractsServiceSoap)(this)).PushVarArrayAsync(inValue);
        }
        
        public string PushGateWayParcels(System.Data.DataSet VarContractDT, string ContractCode, string Password) {
            return base.Channel.PushGateWayParcels(VarContractDT, ContractCode, Password);
        }
        
        public System.Threading.Tasks.Task<string> PushGateWayParcelsAsync(System.Data.DataSet VarContractDT, string ContractCode, string Password) {
            return base.Channel.PushGateWayParcelsAsync(VarContractDT, ContractCode, Password);
        }
        
        public string PushVarContractParcels_SMS(System.Data.DataSet VarContractDT, string ContractCode, string Password) {
            return base.Channel.PushVarContractParcels_SMS(VarContractDT, ContractCode, Password);
        }
        
        public System.Threading.Tasks.Task<string> PushVarContractParcels_SMSAsync(System.Data.DataSet VarContractDT, string ContractCode, string Password) {
            return base.Channel.PushVarContractParcels_SMSAsync(VarContractDT, ContractCode, Password);
        }
        
        public string PushVarContractParcels_SMS_V2(System.Data.DataSet VarContractDT, string ContractCode, string Password) {
            return base.Channel.PushVarContractParcels_SMS_V2(VarContractDT, ContractCode, Password);
        }
        
        public System.Threading.Tasks.Task<string> PushVarContractParcels_SMS_V2Async(System.Data.DataSet VarContractDT, string ContractCode, string Password) {
            return base.Channel.PushVarContractParcels_SMS_V2Async(VarContractDT, ContractCode, Password);
        }
        
        public string PushPostalCodeData(System.Data.DataSet PostalCodeData, string UserName, string Password) {
            return base.Channel.PushPostalCodeData(PostalCodeData, UserName, Password);
        }
        
        public System.Threading.Tasks.Task<string> PushPostalCodeDataAsync(System.Data.DataSet PostalCodeData, string UserName, string Password) {
            return base.Channel.PushPostalCodeDataAsync(PostalCodeData, UserName, Password);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Nop.plugin.Orders.ExtendedShipment.SendToPostDataService.Get_ParcelPriceResponse Nop.plugin.Orders.ExtendedShipment.SendToPostDataService.MassContractsServiceSoap.Get_ParcelPrice(Nop.plugin.Orders.ExtendedShipment.SendToPostDataService.Get_ParcelPriceRequest request) {
            return base.Channel.Get_ParcelPrice(request);
        }
        
        public System.Data.DataSet Get_ParcelPrice(string barcode, string UserName, string Password, out string ErrorText) {
            Nop.plugin.Orders.ExtendedShipment.SendToPostDataService.Get_ParcelPriceRequest inValue = new Nop.plugin.Orders.ExtendedShipment.SendToPostDataService.Get_ParcelPriceRequest();
            inValue.barcode = barcode;
            inValue.UserName = UserName;
            inValue.Password = Password;
            Nop.plugin.Orders.ExtendedShipment.SendToPostDataService.Get_ParcelPriceResponse retVal = ((Nop.plugin.Orders.ExtendedShipment.SendToPostDataService.MassContractsServiceSoap)(this)).Get_ParcelPrice(inValue);
            ErrorText = retVal.ErrorText;
            return retVal.Get_ParcelPriceResult;
        }
        
        public System.Threading.Tasks.Task<Nop.plugin.Orders.ExtendedShipment.SendToPostDataService.Get_ParcelPriceResponse> Get_ParcelPriceAsync(Nop.plugin.Orders.ExtendedShipment.SendToPostDataService.Get_ParcelPriceRequest request) {
            return base.Channel.Get_ParcelPriceAsync(request);
        }
        
        public string PushPishkhanData(string UserName, string Password, string RID, int PostNodeCode, string RDate, int type) {
            return base.Channel.PushPishkhanData(UserName, Password, RID, PostNodeCode, RDate, type);
        }
        
        public System.Threading.Tasks.Task<string> PushPishkhanDataAsync(string UserName, string Password, string RID, int PostNodeCode, string RDate, int type) {
            return base.Channel.PushPishkhanDataAsync(UserName, Password, RID, PostNodeCode, RDate, type);
        }
        
        public System.Data.DataSet Get_PostNodeData(string UserName, string Password, string Pname) {
            return base.Channel.Get_PostNodeData(UserName, Password, Pname);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Get_PostNodeDataAsync(string UserName, string Password, string Pname) {
            return base.Channel.Get_PostNodeDataAsync(UserName, Password, Pname);
        }
        
        public string SetContractAccounts(string ContractCode, string Password) {
            return base.Channel.SetContractAccounts(ContractCode, Password);
        }
        
        public System.Threading.Tasks.Task<string> SetContractAccountsAsync(string ContractCode, string Password) {
            return base.Channel.SetContractAccountsAsync(ContractCode, Password);
        }
        
        public string SetContractIpAddresses(string ContractCode, string IP) {
            return base.Channel.SetContractIpAddresses(ContractCode, IP);
        }
        
        public System.Threading.Tasks.Task<string> SetContractIpAddressesAsync(string ContractCode, string IP) {
            return base.Channel.SetContractIpAddressesAsync(ContractCode, IP);
        }
        
        public string SetContractPostNodes(string ContractCode, string PostCode) {
            return base.Channel.SetContractPostNodes(ContractCode, PostCode);
        }
        
        public System.Threading.Tasks.Task<string> SetContractPostNodesAsync(string ContractCode, string PostCode) {
            return base.Channel.SetContractPostNodesAsync(ContractCode, PostCode);
        }
        
        public string SetContractsInfo(string ContractCode, string ContractName, int OrganizationCode, string StartDate, string EndDate, int ServiceType, int ExecuterCode, string TotalCost, string PostPortion, string ContractorPortion, string Tax, int Weight, int PostalCostCategoryID, char PostalCostTypeFlag, int InsuranceCost) {
            return base.Channel.SetContractsInfo(ContractCode, ContractName, OrganizationCode, StartDate, EndDate, ServiceType, ExecuterCode, TotalCost, PostPortion, ContractorPortion, Tax, Weight, PostalCostCategoryID, PostalCostTypeFlag, InsuranceCost);
        }
        
        public System.Threading.Tasks.Task<string> SetContractsInfoAsync(string ContractCode, string ContractName, int OrganizationCode, string StartDate, string EndDate, int ServiceType, int ExecuterCode, string TotalCost, string PostPortion, string ContractorPortion, string Tax, int Weight, int PostalCostCategoryID, char PostalCostTypeFlag, int InsuranceCost) {
            return base.Channel.SetContractsInfoAsync(ContractCode, ContractName, OrganizationCode, StartDate, EndDate, ServiceType, ExecuterCode, TotalCost, PostPortion, ContractorPortion, Tax, Weight, PostalCostCategoryID, PostalCostTypeFlag, InsuranceCost);
        }
        
        public string SetOrganizaitionInfo(string OrganizationName, int OrganizationCode) {
            return base.Channel.SetOrganizaitionInfo(OrganizationName, OrganizationCode);
        }
        
        public System.Threading.Tasks.Task<string> SetOrganizaitionInfoAsync(string OrganizationName, int OrganizationCode) {
            return base.Channel.SetOrganizaitionInfoAsync(OrganizationName, OrganizationCode);
        }
    }
}
