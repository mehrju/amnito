@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@addTagHelper *, Nop.Web.Framework
@model Nop.Web.Areas.Admin.Models.Orders.ShipmentListModel
@inject Nop.Core.Domain.Common.AdminAreaSettings adminAreaSettings
@using Nop.Web.Framework.UI
@inherits Nop.Web.Framework.Mvc.Razor.NopRazorPage<TModel>
@using Nop.plugin.Orders.ExtendedShipment.Services;
@inject ICollectorService _collectorService;
@using Nop.Core;
@using Nop.Core.Domain.Customers;
@inject IWorkContext _workContext;

@{
    Layout = "_AdminLayout";
    var defaultGridPageSize = adminAreaSettings.DefaultGridPageSize;
    var gridPageSizes = adminAreaSettings.GridPageSizes + ",500";

    //page title
    ViewBag.Title = T("Admin.Orders.Shipments.List").Text;

    //active menu item (system name)
    Html.SetActiveMenuItemSystemName("Shipments");
    Html.AddCssFileParts(ResourceLocation.Footer, "~/Plugins/Orders.ExtendedShipment/Scripts/select2.min.css");
    Html.AddScriptParts(ResourceLocation.Footer, "~/Plugins/Orders.ExtendedShipment/Scripts/select2.full.min.js");
    Html.AppendScriptParts(ResourceLocation.Footer, "~/Plugins/Orders.ExtendedShipment/Scripts/new-bootstrap-treeview.js?ver=28");
    var _collectorList = _collectorService.GetAllCollectorList();
    string Str_collectorList = Newtonsoft.Json.JsonConvert.SerializeObject(_collectorList);
    bool isAdmin = _workContext.CurrentCustomer.IsInCustomerRole("Administrators");
    bool isMiniAdmin = _workContext.CurrentCustomer.IsInCustomerRole("CollerctorAgent");
}
<script>
    function mTracking(OrderId, Status, Des, Mablagh, ShipingId) {
        this.OrderId = OrderId;
        this.Status = Status;
        this.Des = Des;
        this.Mablagh = Mablagh;
        this.ShipingId = ShipingId;
    }
    var _mTracking = new mTracking(0, 0, "", 0, 0);
</script>
<style>
    .bgOrang {
        background-color: #f39c12 !important;
    }

    .bgPink {
        background-color: #dd4b39 !important;
    }

    .select2 {
        width: 100% !important;
    }

    .sendSms:hover {
        color: orange !important;
        font-size: 18px;
    }

    .btnAssingTOCollector:hover {
        color: #86c586 !important;
        font-size: 18px;
    }

    .btnChangeStatus:hover {
        color: #fd1c00 !important;
        font-size: 18px;
    }

    .warning {
        color: red !important;
        font-weight: bold;
    }
</style>
<script>
    function btn_SmartClick(e) {

        $(e).prop('disabled', true);
        var data3 = {
            CustomerId: @(_workContext.CurrentCustomer.Id)
        }
        addAntiForgeryToken(data3);
        $.ajax({
            cache: false,
            type: "POST",
            url: "@Html.Raw(Url.Action("GetCustomerToken", "ExtendedCustomer"))",
            data: data3,
            success: function (data) {
                $(e).prop('disabled', false);
                if (data.success) {
                    window.open('https://smart.postex.ir?token=' + data.token, '_blank');
                    return;
                }
                else alert(data.message);
            },
            error: function (xhr, ajaxOptions, thrownError) {

            }
		});
    }
</script>
<input type="hidden" id="collectorAgentList" value="@(Str_collectorList)" />
<div class="content-header clearfix">
    <h1 class="pull-left">
        @T("Admin.Orders.Shipments.List")
    </h1>
    <div class="pull-right">
        @if (isMiniAdmin)
        {
            <button type="button" onclick="btn_SmartClick(this)" class="btn bg-yellow">
                <i class="fa fa-user" aria-hidden="true"></i>
                ورود به سامانه هوشمند جمع آوری
            </button>
        }
        <div class="btn-group">
            <button type="button" class="btn bg-purple">
                <i class="fa fa-file-pdf-o"></i>
                @T("Admin.Orders.Shipments.PrintPackagingSlips")
            </button>
            <button type="button" class="btn bg-purple dropdown-toggle" data-toggle="dropdown" aria-expanded="false">
                <span class="caret"></span>
                <span class="sr-only">&nbsp;</span>
            </button>
            <ul class="dropdown-menu" role="menu">
                <li>
                    <button type="submit" name="exportpackagingslips-all">
                        @T("Admin.Orders.Shipments.PrintPackagingSlips.All")
                    </button>
                </li>
                <li>
                    <button type="button" id="exportpackagingslips-selected">
                        @T("Admin.Orders.Shipments.PrintPackagingSlips.Selected")
                    </button>
                </li>
            </ul>

        </div>
        <button type="button" id="ship-selected" class="btn bg-aqua">
            <i class="fa fa-truck"></i>
            @T("Admin.Orders.Shipments.ShipSelected")
        </button>
        <button type="button" id="deliver-selected" class="btn bg-green">
            <i class="fa fa-check-square-o"></i>
            @T("Admin.Orders.Shipments.DeliverySelected")
        </button>
        @await Component.InvokeAsync("AdminWidget", new { widgetZone = "admin_order_shipment_list_buttons" })
    </div>
</div>
<div class="content">
    <div class="form-horizontal">
        <div class="box box-info">
            <div class="box-title">
                <div class="box-header with-border clearfix">
                    <div class="box-title">
                        <i class="fa ion-stats-bars"></i>
                        جستوجو بر اساس وضعیت
                    </div>
                    <div class="box-tools pull-right">
                        <button type="button" class="btn btn-box-tool" data-widget="collapse">
                            <i class="fa fa-minus"></i>
                        </button>
                    </div>
                </div>
                <div class="box-body">
                    <div class="row">
                        <div>
                            <div class="col-md-2">
                                <div class="label-wrapper">
                                    <label class="control-label">سرویس پستی</label>
                                </div>
                            </div>
                            <div class="col-md-10">
                                <select id="categorySelect"></select>
                            </div>
                        </div>
                        <div>
                            <div class="col-md-2">
                                <div class="label-wrapper">
                                    <label class="control-label">وضعیت سفارش</label>
                                </div>
                            </div>
                            <div class="col-md-10">
                                <select id="orderStatus" class="statusSelect"></select>
                            </div>
                        </div>

                    </div>
                    <div class="row">

                        <div class="col-md-4"></div>
                        <div class="col-md-4">
                            <button id="searchByStatus" class="button-1 btn btn-primary btn-search">جستوجو</button>
                        </div>
                        <div class="col-md-4"></div>
                    </div>
                </div>
            </div>
        </div>

    </div>
</div>


<div class="box box-info" id="PnlShipmentViewOrder">
    <div class="box-header with-border clearfix">
        <div class="box-title">
            <i class="fa ion-stats-bars"></i>
            نمای کلی از محموله ها
        </div>
        <div class="box-tools pull-right">
            <button type="button" class="btn btn-box-tool" data-widget="collapse">
                <i class="fa fa-minus"></i>
            </button>
        </div>
    </div>
    <div class="box-body">
        <div class="content">
            <div class="row">
                <input type="hidden" id="treeCountryId" name="treeCountryId" />
                <input type="hidden" id="treeStateId" name="treeStateId" />
                <input type="hidden" id="treeCustomerId" name="treeCustomerId" />
                <div class="col-md-12">
                    <div id="treeview1" class="treeview">

                    </div>
                </div>
            </div>
            <script>

                    function getstatusByCategory() {
                        var idCategory = $(`#categorySelect`).val();
                        $.ajax({
                            cache: true,
                            type: "GET",
                            url: 'GetOrderStatusByCategoryId?categoryId=' + idCategory,
                            data: {},
                            success: function (data) {
                                fillStatusSelect(data);
                            },
                            error: function (xhr, ajaxOptions, thrownError) {
                                console.log('Failed to retrieve ');
                                $(`#statusSelect`).css('border', '1px solid red');
                            }
                        });
                    }
                        $(document).ready(function () {

                            $.ajax({
                                cache: true,
                                type: "GET",
                                url: '/ExtendedOrder/GetOrderStatus',
                                data: {},
                                success: function (data) {
                                    $(`.statusSelect`).html('');
                                    $(`.statusSelect`).append(new Option('انتخاب کنید....', '-1', true, true));
                                    $.each(data, function (id, item) {
                                        $(`.statusSelect`).append(new Option(item.Text, item.Value, false, false));
                                    });
                                    $(`.statusSelect`).select2();
                                },
                                error: function (xhr, ajaxOptions, thrownError) {
                                    console.log('Failed to retrieve ');
                                    $(`.statusSelect`).css('border', '1px solid red');
                                }
                            });

                            $.ajax({
                                cache: true,
                                type: "GET",
                                url: '/admin/ExtendedOrder/GetAllCategories',
                                data: {},
                                success: function (data) {
                                    $(`#categorySelect`).html('');
                                    $(`#categorySelect`).append(new Option('انتخاب کنید....', '-1', true, true));
                                    $.each(data, function (id, item) {
                                        $(`#categorySelect`).append(new Option(item.Name, item.Id, false, false));
                                    });
                                    $(`#categorySelect`).select2();
                                    $('#categorySelect').change(function () {
                                        getstatusByCategory();
                                    });
                                },
                                error: function (xhr, ajaxOptions, thrownError) {
                                    console.log('Failed to retrieve ');
                                    $(`#categorySelect`).css('border', '1px solid red');
                                }
                            });

                                gettree1();
                                function gettree1() {
                                    var orderState = $('#orderState').val();
                                    var statusId = $('#orderStatus').val();
                                    var categoryId = $(`#categorySelect`).val()
                                    if (!statusId) {
                                        statusId = 0;
                                    }
                                    if (!orderState) {
                                        orderState = 0;
                                    }
                                    var data = { orderState: orderState, shipmentStatusEnum: statusId, categoryId: categoryId }
                                    addAntiForgeryToken(data); 
                                    $.ajax({
                                        cache: false,
                                        type: "POST",
                                        url: "@(Url.Action("getShipmentOverViewByStatus", "ExtendedOrder"))",
                                        data: data,
                                    success: function (data) {
                                        if (data) {
                                            $(`#treeview1`).treeview({
                                                expandIcon: "glyphicon glyphicon-plus",
                                                collapseIcon: "glyphicon glyphicon-minus",
                                                nodeIcon: "glyphicon glyphicon-user",
                                                showBorder: true,
                                                showTags: true,
                                                highlightSelected: true,
                                                color: "#428bca",
                                                enableLinks: false,
                                                levels: 1,
                                                isAdmin:@isAdmin.ToString().ToLower(),
                                                data: data,
                                                refrechSubData: function (countryId, stateId, customerId) {
                                                    console.log(countryId, stateId, customerId);
                                                    debugger;
                                                    $('#treeCustomerId').val(customerId);
                                                    $('#treeStateId').val(stateId);
                                                    $('#treeCountryId').val(countryId);
                                                    if ($('#PnlShipmentSearch').hasClass('collapsed-box')) {
                                                        $('#PnlShipmentSearch').find("[data-widget='collapse']").click();
                                                    }
                                                    if (!$('#PnlShipmentViewOrder').hasClass('collapsed-box')) {
                                                        $('#PnlShipmentViewOrder').find("[data-widget='collapse']").click();
                                                    }
                                                    var grid = $('#shipments-grid').data('kendoGrid');
                                                    grid.dataSource.page(1);
                                                },
                                                SendSmsFunction: function (customerId, stateId, countryId,Address) {
                                                    _SendSmsForPostMan(customerId, stateId, countryId, Address);
                                                },
                                                assignToCollectorFunction: function (customerId, stateId, countryId, Address) {
                                                    _assignToCollector(customerId, stateId, countryId, Address, $('#ShipmentState2').val());
                                                },
                                                changeStatusFunction: function (countryId, stateId, customerId) {
                                                    $('#treeCustomerId').val(customerId);
                                                    $('#treeStateId').val(stateId);
                                                    $('#treeCountryId').val(countryId);
                                                    _changeStatus();
                                                },
                                                afftrBuildtree: function () {
                                                    //var currentTab = $('.tabItem.active').find('a').attr('data-tab-name').split('_')[1];
                                                    //if (currentTab != '4') {
                                                    //    $('.btnSendSms').hide();
                                                    //}
                                                    //if (currentTab != '4' && currentTab != '1')
                                                    //    $('.btnAssingTOCollector').hide();
                                                }
                                            });
                                            if (!($('#PnlShipmentSearch').hasClass('collapsed-box'))) {
                                                $('#PnlShipmentSearch').find("[data-widget='collapse']").click();
                                            }
                                            if ($('#PnlShipmentViewOrder').hasClass('collapsed-box')) {
                                                $('#PnlShipmentViewOrder').find("[data-widget='collapse']").click();
                                            }
                                        }
                                    },
                                    error: function (xhr, ajaxOptions, thrownError) {
                                        alert('خطا در زمان  دریافت اطلاعات سفارشات');
                                    }
                                });
                            }
                            $('#searchByStatus').click(function () {
                                gettree1();
                            });

                            $('.tabItem').click(function () {
                                //var status = $(this).find('a').attr('data-tab-name').split('_')[1];
                                //if (status != 1) {
                                //    $('#CollectAll').hide();
                                //}
                                //else {
                                //    $('#CollectAll').show();
                                //}
                                //$('#ShipmentState2').val(status);
                                //$('#orderState').val(status);
                                //$('#treeCountryId').val('');
                                //$('#treeStateId').val('');
                                //$('#treeCustomerId').val('');
                                //$(`#treeview1`).html('');

                                gettree1();
                            });
                        });
            </script>
        </div>
    </div>
    <div class="box box-info collapsed-box" id="PnlShipmentSearch">
        <div class="box-header with-border clearfix">
            <div class="box-title">
                <i class="fa ion-stats-bars"></i>
                محموله
            </div>
            <div class="box-tools pull-right">
                <button type="button" class="btn btn-box-tool" data-widget="collapse">
                    <i class="fa fa-plus"></i>
                </button>
            </div>
        </div>
        <div class="box-body">
            <div class="panel-group">
                <div class="panel panel-default panel-search">
                    <div class="panel-body">
                        <div class="row">
                            <div class="col-md-5">
                                <div class="form-group">
                                    <div class="col-md-4">
                                        <nop-label asp-for="StartDate" />
                                    </div>
                                    <div class="col-md-8">
                                        <nop-editor asp-for="StartDate" />
                                        <input id="ShipmentState2" type="hidden" value="4" />
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="col-md-4">
                                        <nop-label asp-for="EndDate" />
                                    </div>
                                    <div class="col-md-8">
                                        <nop-editor asp-for="EndDate" />
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="col-md-4">
                                        <nop-label asp-for="TrackingNumber" />
                                    </div>
                                    <div class="col-md-8">
                                        <nop-editor asp-for="TrackingNumber" />
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="col-md-4">
                                        <nop-label asp-for="WarehouseId" />
                                    </div>
                                    <div class="col-md-8">
                                        <nop-select asp-for="WarehouseId" asp-items="Model.AvailableWarehouses" placeholder="انتخاب کنید" />
                                    </div>
                                </div>

                                <div class="form-group">
                                    <div class="col-md-4">
                                        <div class="label-wrapper">
                                            <label class="control-label" for="ReciverName">نام گیرنده</label>
                                            <div title="فیلتر بر اساس نام و نام خانوادگی گیرنده." class="ico-help"><i class="fa fa-question-circle"></i></div>
                                        </div>
                                    </div>
                                    <div class="col-md-8">
                                        <input class="form-control text-box single-line" id="ReciverName"
                                               name="ReciverName" type="text" value="">
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="col-md-4">
                                        <nop-label asp-for="LoadNotShipped" />
                                    </div>
                                    <div class="col-md-8">
                                        <nop-editor asp-for="LoadNotShipped" />
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="col-md-4" style="display:none">
                                        <div class="label-wrapper">
                                            <label class="control-label" for="ShipmentState">وضعیت محموله</label>
                                            <div title="جستجو براساس وضعیت حمل محموله" class="ico-help"><i class="fa fa-question-circle"></i></div>
                                        </div>
                                    </div>
                                    @*<div class="col-md-8">
                                            <select class="form-control valid statusSelect" data-val="true" id="ShipmentState" name="ShipmentState" placeholder="انتخاب کنید"></select>
                                        </div>*@
                                </div>
                            </div>
                            <div class="col-md-7">
                                <div class="form-group">
                                    <div class="col-md-4">
                                        <div class="label-wrapper">
                                            <label class="control-label" for="CountryId">استان فرستنده</label>
                                            <div title="جستجو براساس استان فرستنده مشخص" class="ico-help"><i class="fa fa-question-circle"></i></div>
                                        </div>
                                    </div>
                                    <div class="col-md-8">
                                        <nop-select asp-for="CountryId" asp-items="Model.AvailableCountries" placeholder="انتخاب کنید" />
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="col-md-4">
                                        <div class="label-wrapper">
                                            <label class="control-label" for="StateProvinceId">شهرستان فرستنده</label>
                                            <div title="جستجو براساس شهرستان گیرنده فرستنده" class="ico-help"><i class="fa fa-question-circle"></i></div>
                                        </div>
                                    </div>
                                    <div class="col-md-8">
                                        <nop-select asp-for="StateProvinceId" asp-items="Model.AvailableStates" placeholder="انتخاب کنید" />
                                    </div>
                                </div>
                                <div class="form-group" style="display:none">
                                    <div class="col-md-4">
                                        <div class="label-wrapper">
                                            <label class="control-label" for="City">شهر فرستنده</label>
                                            <div title="جستجو براساس شهر فرستنده مشخص" class="ico-help"><i class="fa fa-question-circle"></i></div>
                                        </div>
                                    </div>
                                    <div class="col-md-8">
                                        <nop-editor asp-for="City" />
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="col-md-4">
                                        <div class="label-wrapper">
                                            <label class="control-label" for="ReciverCountryId">استان گیرنده</label>
                                            <div title="جستجو براساس استان گیرنده مشخص" class="ico-help"><i class="fa fa-question-circle"></i></div>
                                        </div>
                                    </div>
                                    <div class="col-md-8">
                                        <select class="form-control valid" data-val="true" id="ReciverCountryId" name="ReciverCountryId" placeholder="انتخاب کنید">
                                            @foreach (var item in Model.AvailableCountries)
                                            {
                                                <option value="@(item.Value)">@(item.Text)</option>
                                            }
                                        </select>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="col-md-4">
                                        <div class="label-wrapper">
                                            <label class="control-label" for="ReciverStateProvinceId">شهرستان گیرنده</label>
                                            <div title="جستجو براساس شهرستان گیرنده مشخص" class="ico-help"><i class="fa fa-question-circle"></i></div>
                                        </div>
                                    </div>
                                    <div class="col-md-8">
                                        <select class="form-control valid" data-val="true" id="ReciverStateProvinceId" name="ReciverStateProvinceId" placeholder="انتخاب کنید">
                                            <option selected="selected" value="0">*</option>
                                        </select>
                                    </div>
                                </div>
                                <div class="form-group" style="display:none">
                                    <div class="col-md-4">
                                        <div class="label-wrapper">
                                            <label class="control-label" for="City">شهر گیرنده</label>
                                            <div title="جستجو براساس شهر گیرنده مشخص" class="ico-help"><i class="fa fa-question-circle"></i></div>
                                        </div>
                                    </div>
                                    <div class="col-md-8">
                                        <input class="form-control text-box single-line" id="ReciverCity" name="ReciverCity" type="text" value="">
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="col-md-4">
                                        <div class="label-wrapper">
                                            <label class="control-label" for="PostmanId">پستچی</label>
                                            <div title="جستجو براساس پستچی" class="ico-help"><i class="fa fa-question-circle"></i></div>
                                        </div>
                                    </div>
                                    <div class="col-md-8">
                                        <select class="form-control valid google" data-val="true" id="PostmanId" name="PostmanId" data-search="true" theme="google" placeholder="انتخاب کنید">
                                            <option selected="selected" value="0">*</option>
                                        </select>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="col-md-4">
                                        <div class="label-wrapper">
                                            <label class="control-label" for="SenderName">نام فرستنده</label>
                                            <div title="فیلتر بر اساس نام و نام خانوادگی فرستنده." class="ico-help"><i class="fa fa-question-circle"></i></div>
                                        </div>
                                    </div>
                                    <div class="col-md-8">
                                        <input class="form-control text-box single-line" id="SenderName"
                                               name="SenderName" type="text" value="">
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="col-md-4">
                                        <div class="label-wrapper">
                                            <label class="control-label" for="orderId">شناسه سفارش</label>
                                        </div>
                                    </div>
                                    <div class="col-md-8">
                                        <input class="form-control text-box single-line" id="orderId"
                                               name="orderId" type="number" value="">
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-7" style="text-align: left;">
                                    <button type="button" id="search-shipments" class="btn btn-primary btn-search">
                                        <i class="fa fa-search"></i>
                                        @T("Admin.Common.Search")
                                    </button>
                                    <button type="button" id="search-NotCollect" style="display:none" class="btn btn-warning btn-search">
                                        <i class="fa fa-search"></i>
                                        جمع آوری نشده
                                    </button>
                                    <button type="button" id="search-NotShipped" style="display:none" class="btn btn-danger btn-search">
                                        <i class="fa fa-search"></i>
                                        ارسال نشده
                                    </button>
                                </div>
                                <div class="col-md-5" style="text-align: left;">
                                    @*<a class="btn btn-warning" onclick="SendSmsForPostMan(null)" title="ارسال پیام کوتاه برای پستچی"
                                           style="margin-left: 25px;margin-top: 23px;">
                                            <i class="fa fa-paper-plane"></i>
                                        </a>*@
                                    <a class="btn btn-success" id="CollectAll" onclick="setDataCollectAll()" title="ثبت تاریخ جمع آوری محموله پستی برای موارد انتخابی"
                                       style="margin-left: 25px;margin-top: 23px;display:none">
                                        <i class="fa fa-truck"></i>
                                    </a>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="modal fade" id="choosCollectorModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabe2"
                     aria-hidden="true">
                    <div class="modal-dialog modal-lg" role="document">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title" id="myModalLabe2">انتخاب جمع آور</h5>
                                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                    <span aria-hidden="true">&times;</span>
                                </button>
                            </div>
                            <div class="modal-body">
                                <div class="row">
                                    <div class="col-md-12">
                                        <label id="collectorWarning">  </label>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-2">

                                        <label class="control-label">جمع آور:</label>
                                    </div>

                                    <div class="col-md-10">
                                        <select id="CollectorList" class="form-control"></select>
                                        <input type="hidden" id="CollectorshipmentId" />
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-2">
                                        <label class="control-label">توضیحات:</label>
                                    </div>
                                    <div class="col-md-10">
                                        <textarea id="desc" class="control" style="width: 100% !important;margin-top: 10px !important;height:200px !important">
                                                </textarea>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary btn-sm" data-dismiss="modal">انصراف</button>
                            <button type="button" id="Btn_AcceptCollector" class="btn btn-primary btn-sm">تایید</button>
                        </div>
                    </div>
                </div>
            </div>


            <div class="modal fade" id="sendSmsToPostAdmin" tabindex="-1" role="dialog" aria-labelledby="myModalLabel"
                 aria-hidden="true">
                <div class="modal-dialog modal-lg" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                        </div>
                        <div class="modal-body">
                            <div class="row">
                                <dic class="col-md-12">
                                    <label id="smsWarning">  </label>
                                </dic>
                                <div class="col-md-2">

                                    <label class="control-label">موبایل جمع آور:</label>
                                </div>
                                <div class="col-md-10">
                                    <input type="text" class="control" id="PhoneNumber" maxlength="11" />
                                    <input type="hidden" id="shipmentIds" />
                                    <input type="hidden" id="_CollectorSmsItems" />
                                </div>
                                <div class="col-md-2">
                                    <label class="control-label">متن پیام:</label>
                                </div>
                                <div class="col-md-10">
                                    <textarea id="textMsg" class="control" style="width: 100% !important;margin-top: 10px !important;height:200px !important">

                                                </textarea>
                                </div>
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary btn-sm" data-dismiss="modal">انصراف</button>
                            <button type="button" id="Btn_SendSms" class="btn btn-primary btn-sm">ارسال پیامک</button>
                        </div>
                    </div>
                </div>
            </div>
            <div class="panel panel-default">
                `               <div class="panel-body">
                    <div id="shipments-grid"></div>
                    <script type="text/javascript">
                                $('#Btn_AcceptCollector').click(function () {
                                    if (!$('#CollectorList').val()) {
                                        alert('لطفا جمع آور مورد نظر را انتخاب کنید');
                                        return;
                                    }
                                    if (!$('#CollectorshipmentId').val()) {
                                        alert('محموله ای جهت انتصاب به جمع آور یافت نشد');
                                        return;
                                    }
                                    var shipmentIds = $('#CollectorshipmentId').val();
                                    var IdData = { "Collectorid": $('#CollectorList').val(), "Desc": $('#Desc').val(), "shipmentIds": shipmentIds.split(',') };
                                        addAntiForgeryToken(IdData);
                                        $.ajax({
                                            cache: false,
                                            type: "POST",
                                            url: "@(Url.Action("chooseCollector", "ExtendedOrder"))",
                                            data: IdData,
                                            success: function (data) {
                                                debugger;
                                                alert(data.message);
                                                if (!data.success) {
                                                    return;
                                                }
                                                $('#choosCollectorModal').modal('hide');
                                            },
                                            error: function (xhr, ajaxOptions, thrownError) {
                                                alert('خطا در زمان انتصاب به جمع آور');
                                            }

                                        });
                                });
                            $(document).ready(function () {
                                $("#shipments-grid").kendoGrid({
                                    autoBind: false,
                                    dataSource: {
                                        type: "json",
                                        transport: {
                                            read: {
                                                url: "@Html.Raw(Url.Action("ShipmentListSelectByStatus", "ExtendedOrder"))",
                                                type: "POST",
                                                dataType: "json",
                                                data: additionalData
                                            }
                                        },
                                        schema: {
                                            data: "Data",
                                            total: "Total",
                                            errors: "Errors"
                                        },
                                        error: function(e) {
                                            display_kendoui_grid_error(e);
                                            // Cancel the changes
                                            this.cancelChanges();
                                        },
                                        pageSize: @(defaultGridPageSize),
                                        serverPaging: true,
                                        serverFiltering: true,
                                        serverSorting: true
                                    },
                                    pageable: {
                                        refresh: true,
                                        pageSizes: [@(gridPageSizes)],
                                        @await Html.PartialAsync("_GridPagerMessages")
                                    },
                                    //details grid
                                    detailInit: detailInit,
                                    scrollable: false,
                                    dataBound: onDataBound,
                                    columns: [{
                                        field: "Id",
                                        headerTemplate: "<input id='mastercheckbox' type='checkbox'/>",
                                        headerAttributes: { style: "text-align:center" },
                                        attributes: { style: "text-align:center" },
                                        template: "<input type='checkbox' value='#=Id#' class='checkboxGroups'/>",
                                        width: 50
                                    }
                                        , {
                                        field: "Id",
                                        title: "@T("Admin.Orders.Shipments.ID")",
                                        width: 50,
                                         template: "#if(NeedPrinter) {#"
                                                + "<i style=\"color:green\" aria-hidden=\"true\" class=\"fa fa-print\" title=\"نیاز به چاپ رسید\"></i>"
                                                + "#}#"
                                                + "#if(NeedCarton) {#"
                                                + "<i style=\"color:red\" aria-hidden=\"true\" class=\"fa fa-gift\" title=\"نیاز به کارتون #=CartonSizeName#\"></i>"
                                                + "#}#"
                                                + " #=Id#"
                                        }
                                        , {
                                        field: "OrderId",
                                        title: "@T("Admin.Orders.Shipments.CustomOrderNumber")",
                                        width: 100
                                    }, {
                                        field: "TrackingNumber",
                                        title: "@T("Admin.Orders.Shipments.TrackingNumber")",
                                        width: 100
                                        }
                                        , {
                                            field: "LatestEvent",
                                        title: "آخرین وضعیت",
                                        width: 150
                                        }
                                    , {
                                        field: "IsBulk",
                                        title: "نحوه سفارش",
                                        width: 100
                                        }
                                        , {
                                            field: "HasBime",
                                            title: "بیمه",
                                            width: 100
                                        }
                                        , {
                                            field: "CoordinationDate",
                                            title: "تاریخ هماهنگی",
                                            width: 200,
                                            type: "date",
                                            format: "{0:G}"
                                        }
                                        , {
                                            field: "DataCollect",
                                            title: "تاریخ جمع آوری",
                                            width: 200,
                                            type: "date",
                                            format: "{0:G}"
                                        }
                                        , {
                                            field: "ShippedDate",
                                            title: "@T("Admin.Orders.Shipments.ShippedDate")",
                                            width: 200
                                        }
                                        , {
                                            field: "DeliveryDate",
                                            title: "@T("Admin.Orders.Shipments.DeliveryDate")",
                                            width: 200

                                        }
                                    , {
                                        field: "PostManMobile",
                                        title: "مامور جمع آور",
                                        width: 100
                                        }
                                        ,
                                        {
                                            field: "FullAddress",
                                            title: "آدرس",
                                            width: 350
                                        }
                                        ,
                                        {
                                            field: "Id",
                                            title: "",
                                            width: 50,
                                            headerAttributes: { style: "text-align:center" },
                                            attributes: { style: "text-align:center" },
                                            template: '<a class="btn btn-default" href="@Url.Content("~/Admin/Order/ShipmentDetails/")#=Id#" title="@T("Admin.Common.View")"><i class="fa fa-eye"></i></a>'
                                                + '<a data-value="#=Id#" class="btn btn-info" onclick="updateFromPost(this)"  title="به روز سانی از پست"><i class="fa fa-exchange"></i></a>'
                                                //+ '<a data-value="#=Id#" class="btn btn-warning btnSendSms" onclick="SendSmsForPostMan(this)" title="ارسال پیام کوتاه برای پستچی"><i class="fa fa-paper-plane"></i></a>'
                                                + '<a data-value="#=Id#" class="btn btn-success btnSetCollectDate" onclick="setDataCollect(this)"  title="ثبت تاریخ جمع آوری محموله پستی"><i class="fa fa-truck"></i></a>'
                                                + '<a data-value="#=Id#" class="btn btn-warning btnSetStatus" onclick="setStatus(this,#=IdCategory#)"  title="ثبت وضعیت"><i class="fa fa-compass"></i></a>'
                                        }
                                        ,
                                        {
                                    field: "Id",
                                    title: "اعلام وضعیت محموله های خارجی",
                                    width:70,
                                    headerAttributes: { style: "text-align:center" },
                                    attributes: { style: "text-align:center" },
                                    template:"#if(IsForeign) {#"
                                                + `<a class="btn btn-default" onClick="OpenTrackingModal(#=Id#,'#=OrderId#')" ><i class="fa fa-pencil-square-o" style="color:green"></i></a>`
                                    + "#}#"
                                }
                                          ,

                                        {
                                            field: "delayDataCollect",
                                            title: "تاخیر جمع آوری",
                                            hidden: true
                                        },
                                        {
                                            field: "delayShippedDate",
                                            title: "تاخیر ارسال",
                                            hidden: true
                                        }
                                    ]
                                });
                            });

                            function OpenTrackingModal(id,OrderId) {
                                _mTracking.ShipingId = id;
                                _mTracking.OrderId = OrderId;
                                    TxtDescription.value = "";
                                    Txtmablagh1.value = "";
                                    $("#Radio_Status_no").prop('checked', false);
                                    $("#Radio_Status_yes").prop('checked', false);
                                    $("#Radio_Status_conflict_Increase").prop('checked', false);
                                $("#Radio_Status_conflict_decrease").prop('checked', false);
                                $("#History-grid").hide();
                                $('#modalTrackingForeign').modal('show', { backdrop: 'static' });
                                $('#modalTrackingForeign').appendTo("body");
                            }


                            //details grid
                            function detailInit(e) {
                                $("<div/>").appendTo(e.detailCell).kendoGrid({
                                    dataSource: {
                                        type: "json",
                                        transport: {
                                            read: {
                                                url: "@Html.Raw(Url.Action("ShipmentsItemsByShipmentId", "Order"))?shipmentId="+e.data.Id,
                                                type: "POST",
                                                dataType: "json",
                                                data: addAntiForgeryToken
                                            }
                                        },
                                        schema: {
                                            data: "Data",
                                            total: "Total",
                                            errors: "Errors"
                                        },
                                        error: function(e) {
                                            display_kendoui_grid_error(e);
                                            // Cancel the changes
                                            this.cancelChanges();
                                        },
                                        serverPaging: true,
                                        serverFiltering: true,
                                        serverSorting: true
                                    },
                                    scrollable: false,
                                    sortable: true,
                                    pageable: {
                                        refresh: true,
                                        numeric: false,
                                        previousNext: false,
                                        info: false,
                                        @await Html.PartialAsync("_GridPagerMessages")
                                    },
                                    columns: [
                                        {
                                            field: "ProductName",
                                            title: "@T("Admin.Orders.Shipments.Products.ProductName")",
                                            width: 400
                                        },{
                                            field: "ShippedFromWarehouse",
                                            title: "@T("Admin.Orders.Shipments.Products.Warehouse")",
                                            width: 150
                                        },{
                                            field: "QuantityInThisShipment",
                                            title: "@T("Admin.Orders.Shipments.Products.QtyShipped")",
                                            width: 150
                                        },{
                                            field: "ItemWeight",
                                            title: "@T("Admin.Orders.Shipments.Products.ItemWeight")",
                                            width: 150
                                        },{
                                            field: "ItemDimensions",
                                            title: "@T("Admin.Orders.Shipments.Products.ItemDimensions")",
                                            width: 150
                                        }
                                    ]
                                });
                            }
                    </script>
                </div>
            </div>
            <script type="text/javascript">
                    function setDataCollect(btn) {
                        shipmentId = $(btn).attr('data-value');
                        var postData = { "shipmentId": shipmentId };
                        addAntiForgeryToken(postData);
                        $.ajax({
                            cache: false,
                            type: "POST",
                            url: "@(Url.Action("setDataCollect", "ExtendedOrder"))",
                            data: postData,
                            success: function(data) {
                                if (!data.success) {
                                    alert('خطا درزمان به روز رسانی');
                                }
                                var grid = $('#shipments-grid').data('kendoGrid');
                                grid.dataSource.read();
                            },
                            error: function(xhr, ajaxOptions, thrownError) {
                                alert('Failed to retrieve states.');
                            }
                        });
                    }
                    function setDataCollectAll() {
                        if ($(selectedIds).size() == 0) {
                            alert('ابتدا محموله های مورد نظر را انتخاب نمایید');
                            return;
                        }
                        var IdData = { "shipmentIds": selectedIds };
                        addAntiForgeryToken(IdData);
                        $.ajax({
                            cache: false,
                            type: "POST",
                            url: "@(Url.Action("setDataCollectAll", "ExtendedOrder"))",
                            data: IdData,
                            success: function(data) {
                                if (!data.success) {
                                    alert('خطا درزمان به روز رسانی');
                                }
                                var grid = $('#shipments-grid').data('kendoGrid');
                                grid.dataSource.read();
                            },
                            error: function(xhr, ajaxOptions, thrownError) {
                                alert('Failed to retrieve states.');
                            }
                        });
                    }

                var shipmentIdForStatus = null;
                function setStatus(btn, idCategory) {
                        shipmentIdForStatus = $(btn).attr('data-value');
                        $('#modalType').val('fromShipment');

                        $.ajax({
                            cache: true,
                            type: "GET",
                            url: 'GetOrderStatusByCategoryId?categoryId=' + idCategory,
                            data: {},
                            success: function (data) {
                                fillStatusSelect(data);
                                $('#modalShipmentStatus').modal('show');
                            },
                            error: function (xhr, ajaxOptions, thrownError) {
                                console.log('Failed to retrieve ');
                                $(`#statusSelect`).css('border', '1px solid red');
                            }
                        });



                    }

                    function fillStatusSelect(data) {
                        $(`.statusSelect`).html('');
                        $(`.statusSelect`).append(new Option('انتخاب کنید....', '-1', true, true));
                        $.each(data, function (id, item) {
                            $(`.statusSelect`).append(new Option(item.Text, item.Value, false, false));
                        });
                        $(`.statusSelect`).select2();
                    }


                            function SendSmsForPostMan(btn) {
                                debugger;
                                $('#shipmentIds').val('');
                            var IdData = null;
                            if (!btn) {
                                if ($(selectedIds).size() == 0) {
                                    alert('ابتدا محموله های مورد نظر را انتخاب نمایید');
                                    return;
                                }
                                IdData = { "shipmentIds": selectedIds };
                            }
                            else {
                                shipmentId = $(btn).attr('data-value');
                                IdData = { "shipmentIds":  [shipmentId] };
                            }
                            addAntiForgeryToken(IdData);
                            $.ajax({
                                cache: false,
                                type: "POST",
                                url: "@(Url.Action("getSmsItemsForPostMan", "ExtendedOrder"))",
                                data: IdData,
                                success: function(data) {
                                    if (!data.success) {
                                        alert('بروز اشکال در زمان آماده سازی پیامک');
                                        return;
                                    }
                                    $('#textMsg').val(data.message);

                                    if (data.weight > 20000) {
                                        $('#smsWarning').text('وزن تقریبی انتخاب شما بالاتر از 20 کیلو گرم می باشد- پیشنهاد برای جمع آوری:خودرو می باشد');
                                        $('#smsWarning').addClass('warning');
                                    }
                                    else {
                                        $('#smsWarning').text('وزن تقریبی انتخاب شما ' + data.weight + ' گرم میباشد- پیشنهاد برای جمع آوری:موتور می باشد');
                                        $('#smsWarning').removeClass('warning');
                                    }
                                    $('#sendSmsToPostAdmin').modal('show', { backdrop: 'static' });
                                    $('#sendSmsToPostAdmin').appendTo("body");
                                },
                                error: function(xhr, ajaxOptions, thrownError) {
                                    alert('Failed to retrieve states.');
                                }
                            });
                        }

                function refreshTree() {
                    refreshTree();
                                return false;
                            }

                            function _assignToCollector(customerId, stateId, CountryId, Address,shipmentState) {
                                var _Address = Address.split('*')[0];
                                debugger;
                                $('#CollectorshipmentId').val('');
                                var CoList = JSON.parse($('#collectorAgentList').val());
                                var _CoList = null;
                                if (stateId && CountryId != 1) {
                                    _CoList = $.grep(CoList, function (item) {
                                        return item.StateProvince == parseInt(stateId);
                                    });
                                }
                                else if (CountryId) {
                                    _CoList = $.grep(CoList, function (item) {
                                        return item.CountryId == parseInt(CountryId);
                                    });
                                }
                                else {
                                    _CoList = CoList;
                                }
                                _CoList = $.unique(_CoList);
                                $('#CollectorList').html('');
                                $('#CollectorList').append(new Option('انتخاب کنید...', 0, false, false));
                                $(_CoList).each(function () {
                                    var item = $(this);
                                    if ($('#CollectorList').find("option:contains('" + item[0].CustomerName + "')").length <= 0)
                                        $('#CollectorList').append(new Option(item[0].CustomerName, item[0].CustomerId, false, false));

                                });
                                var IdData = { "customerId": customerId, "stateId": stateId, "countryId": CountryId, "Address": _Address, "shipmentState": shipmentState };
                                 addAntiForgeryToken(IdData);
                                $.ajax({
                                    cache: false,
                                    type: "POST",
                                    url: "@(Url.Action("_getshipmentIds", "ExtendedOrder"))",
                                    data: IdData,
                                    success: function(data) {
                                        if (!data.success) {
                                            if (data.message)
                                                alert(data.message);
                                            else
                                                alert('بروز اشکال در زمان آماده دریافت لیست محموله ها جهت انتصاب به جمع آور');
                                            return;
                                        }
                                        $('#CollectorshipmentId').val(data.shipmentIds);

                                        $('#choosCollectorModal').modal('show', { backdrop: 'static' });
                                        $('#choosCollectorModal').appendTo("body");
                                    },
                                    error: function(xhr, ajaxOptions, thrownError) {
                                        alert('بروز اشکال در زمان آماده دریافت لیست محموله ها جهت انتصاب به جمع آور');
                                    }
                                });



                }


                function _changeStatus() {


                     $.ajax({
                         cache: false,
                         type: "POST",
                         url: "@(Url.Action("IsAllowedToChangeStatus", "ExtendedOrder"))",
                          data: additionalData(),
                         success: function (data) {
                             if (!data) {
                                 alert("با توجه به اینکه مسیر انتخابی شما شامل چندین نوع سرویس پستی می باشد، برای تغییر وضعیت به صورت تکی از لیست پایین صفحه استفاده کنید");
                             }
                             else {
                                 fillStatusSelect(data);
                                 $('#modalType').val('fromTree');
                                 $('#modalShipmentStatus').modal('show');
                             }
                         },
                         error: function(xhr, ajaxOptions, thrownError) {
                             alert('Failed to retrieve states.');
                         }
                     });




                }
                            function _SendSmsForPostMan(customerId,stateId,CountryId,Address) {
                                debugger;
                                $('#_CollectorSmsItems').val()
                                var _Address = Address.split('*')[0];
                                var IdData = { "customerId": customerId, "stateId": stateId, "countryId": CountryId, "Address": _Address };

                                addAntiForgeryToken(IdData);
                                $.ajax({
                                    cache: false,
                                    type: "POST",
                                    url: "@(Url.Action("_getSmsItemsForPostMan", "ExtendedOrder"))",
                                    data: IdData,
                                    success: function(data) {
                                        if (!data.success) {
                                            alert('بروز اشکال در زمان آماده سازی پیامک');
                                            return;
                                        }
                                        $('#_CollectorSmsItems').val(data.SmsModel);
                                        var smsItems = JSON.parse(data.SmsModel);
                                        var TotalWeight = 0;
                                        $('#textMsg').val('');
                                        for (var i in smsItems) {
                                            var item = smsItems[i];
                                            $('#textMsg').val(($('#textMsg').val() + '\r\n' + item.Sms));
                                            TotalWeight += item.Weight;
                                        }

                                        if (TotalWeight > 20000) {
                                            $('#smsWarning').text('وزن تقریبی انتخاب شما بالاتر از 20 کیلو گرم می باشد- پیشنهاد برای جمع آوری:خودرو می باشد');
                                        }
                                        else {
                                            $('#smsWarning').text('وزن تقریبی انتخاب شما ' + data.weight+' گرم میباشد- پیشنهاد برای جمع آوری:موتور می باشد');
                                        }
                                        $('#sendSmsToPostAdmin').modal('show', { backdrop: 'static' });
                                        $('#sendSmsToPostAdmin').appendTo("body");
                                    },
                                    error: function(xhr, ajaxOptions, thrownError) {
                                        alert('Failed to retrieve states.');
                                    }
                                });
                            }
                            $('#Btn_SendSms').click(function () {
                                var phoneNumner = $('#PhoneNumber').val();
                                if (!phoneNumner || phoneNumner == '' || !phoneNumner.startsWith('09')) {
                                    alert('شماره تماس وارد  شده نامعتبر میباشد');
                                    return;
                                }
                                var txtmsg = $('#textMsg').val();
                                var shipmentIds = $('#shipmentIds').val();
                                var IdData = { "mobile": $('#PhoneNumber').val(), "Str_SmsModel": $('#_CollectorSmsItems').val() };
                                addAntiForgeryToken(IdData);
                                $.ajax({
                                    cache: false,
                                    type: "POST",
                                    url: "@(Url.Action("SendSmsToPostMan", "ExtendedOrder"))",
                                    data: IdData,
                                    success: function (data) {
                                        debugger;
                                        alert(data.message);
                                        if (!data.success) {
                                            return;
                                        }
                                        $('#sendSmsToPostAdmin').modal('hide');
                                    },
                                    error: function (xhr, ajaxOptions, thrownError) {
                                        alert('Failed to retrieve states.');
                                    }

                                });
                            });
                    function updateFromPost(btn) {
                        shipmentId = $(btn).attr('data-value');
                        var postData = { "shipmentId": shipmentId };
                        addAntiForgeryToken(postData);
                        $.ajax({
                            cache: false,
                            type: "POST",
                            url: "@(Url.Action("getUpdateFromPost", "ExtendedOrder"))",
                            data: postData,
                            success: function(data) {
                                if (!data.IsOk) {
                                    alert('خطا درزمان به روز رسانی');
                                }
                                var grid = $('#shipments-grid').data('kendoGrid');
                                grid.dataSource.read();
                            },
                            error: function(xhr, ajaxOptions, thrownError) {
                                alert('Failed to retrieve states.');
                            }
                        });
                    }
                    var selectedIds = [];
                    $(document).ready(function () {

                        //load states when changing a country dropdownlist
                        $("#@Html.IdFor(model => model.CountryId)").change(function() {
                            var selectedItem = $(this).val();
                            var ddlStates = $("#@Html.IdFor(model => model.StateProvinceId)");
                            $.ajax({
                                cache: false,
                                type: "GET",
                                url: "@(Url.Action("GetStatesByCountryId", "Country"))",
                                data: { "countryId": selectedItem, "addAsterisk": "true" },
                                success: function(data) {
                                    ddlStates.html('');
                                    $.each(data, function(id, option) {
                                        ddlStates.append($('<option></option>').val(option.id).html(option.name));
                                    });
                                },
                                error: function(xhr, ajaxOptions, thrownError) {
                                    alert('Failed to retrieve states.');
                                }
                            });
                        });
                        $("#ReciverCountryId").change(function() {
                            var selectedItem = $(this).val();
                            var ddlStates = $("#ReciverStateProvinceId");
                            $.ajax({
                                cache: false,
                                type: "GET",
                                url: "@(Url.Action("GetStatesByCountryId", "Country"))",
                                data: { "countryId": selectedItem, "addAsterisk": "true" },
                                success: function(data) {
                                    ddlStates.html('');
                                    $.each(data, function(id, option) {
                                        ddlStates.append($('<option></option>').val(option.id).html(option.name));
                                    });
                                },
                                error: function(xhr, ajaxOptions, thrownError) {
                                    alert('Failed to retrieve states.');
                                }
                            });
                        });

                        var ddlPostman = $("#PostmanId");
                        $.ajax({
                            cache: false,
                            type: "GET",
                            url: "@(Url.Action("getUserInRole", "ExtendedOrder"))",
                            data: { "customerType": '@(Nop.plugin.Orders.ExtendedShipment.Models.CustomerType.PostMan)'},
                            success: function(data) {
                                ddlPostman.html('');
                                ddlPostman.append($('<option></option>').val('0').html('*'));
                                $.each(data, function(id, option) {
                                    ddlPostman.append($('<option></option>').val(option.Value).html(option.Text));
                                });
                            },
                            error: function(xhr, ajaxOptions, thrownError) {
                                alert('Failed to retrieve states.');
                            }
                        });

                        $("".concat("#@Html.IdFor(model => model.TrackingNumber),",
                            "#@Html.IdFor(model => model.City)")).keydown(function(event) {
                            if (event.keyCode === 13) {
                                $("#search-shipments").click();
                                return false;
                            }
                        });

                        //search button
                        $('#search-shipments').click(function() {
                            //search
                            $('#ShipmentState2').val("0");
                            var grid = $('#shipments-grid').data('kendoGrid');
                            grid.dataSource.page(1); //new search. Set page size to 1
                            //grid.dataSource.read(); we already loaded the grid above using "page" function
                            //clear selected checkboxes
                            $('.checkboxGroups').attr('checked', false).change();
                            selectedIds = [];
                            return false;
                        });
                        $('#search-NotCollect').click(function() {
                            //search
                            $('#ShipmentState2').val("1");
                            var grid = $('#shipments-grid').data('kendoGrid');
                            grid.dataSource.page(1); //new search. Set page size to 1
                            //grid.dataSource.read(); we already loaded the grid above using "page" function
                            //clear selected checkboxes
                            $('.checkboxGroups').attr('checked', false).change();
                            selectedIds = [];
                            return false;
                        });
                        $('#search-NotShipped').click(function() {
                            //search
                            $('#ShipmentState2').val("2");
                            var grid = $('#shipments-grid').data('kendoGrid');
                            grid.dataSource.page(1); //new search. Set page size to 1
                            //grid.dataSource.read(); we already loaded the grid above using "page" function
                            //clear selected checkboxes
                            $('.checkboxGroups').attr('checked', false).change();
                            selectedIds = [];
                            return false;
                        });

                        //"ship selected" button
                        $('#ship-selected').click(function(e) {
                            e.preventDefault();

                            var postData = {
                                selectedIds: selectedIds
                            };
                            addAntiForgeryToken(postData);

                            $.ajax({
                                cache: false,
                                type: "POST",
                                url: "@(Url.Action("SetAsShippedSelected", "Order"))",
                                data: postData,
                                complete: function(data) {
                                    //reload grid
                                    var grid = $('#shipments-grid').data('kendoGrid');
                                    grid.dataSource.read();
                                },
                                error: function(xhr, ajaxOptions, thrownError) {
                                    alert(thrownError);
                                },
                                traditional: true
                            });
                            return false;
                        });

                        //"deliver selected" button
                        $('#deliver-selected').click(function(e) {
                            e.preventDefault();

                            var postData = {
                                selectedIds: selectedIds
                            };
                            addAntiForgeryToken(postData);

                            $.ajax({
                                cache: false,
                                type: "POST",
                                url: "@(Url.Action("SetAsDeliveredSelected", "Order"))",
                                data: postData,
                                complete: function(data) {
                                    //reload grid
                                    var grid = $('#shipments-grid').data('kendoGrid');
                                    grid.dataSource.read();
                                },
                                error: function(xhr, ajaxOptions, thrownError) {
                                    alert(thrownError);
                                },
                                traditional: true
                            });
                            return false;
                        });

                        $('#mastercheckbox').click(function() {
                            $('.checkboxGroups').attr('checked', $(this).is(':checked')).change();
                        });

                        //wire up checkboxes.
                        $('#shipments-grid').on('change', 'input[type=checkbox][id!=mastercheckbox][class=checkboxGroups]', function(e) {
                            var $check = $(this);
                            if ($check.is(":checked") == true) {
                                var checked = jQuery.inArray($check.val(), selectedIds);
                                if (checked == -1) {
                                    //add id to selectedIds.
                                    selectedIds.push($check.val());
                                }
                            } else {
                                var checked = jQuery.inArray($check.val(), selectedIds);
                                if (checked > -1) {
                                    //remove id from selectedIds.
                                    selectedIds = $.grep(selectedIds, function(item, index) {
                                        return item != $check.val();
                                    });
                                }
                            }
                            updateMasterCheckbox();
                        });
                    });

                    function additionalData() {
                        var data = {
                            StartDate: $('#@Html.IdFor(model => model.StartDate)').val(),
                            EndDate: $('#@Html.IdFor(model => model.EndDate)').val(),
                            TrackingNumber: $('#@Html.IdFor(model => model.TrackingNumber)').val(),
                            CountryId: $('#@Html.IdFor(model => model.CountryId)').val(),
                            StateProvinceId: $('#@Html.IdFor(model => model.StateProvinceId)').val(),
                            City: $('#@Html.IdFor(model => model.City)').val(),
                            WarehouseId: $('#@Html.IdFor(model => model.WarehouseId)').val(),
                            LoadNotShipped: $('#@Html.IdFor(model => model.LoadNotShipped)').is(':checked'),
                            ReciverCountryId: $('#ReciverCountryId').val(),
                            ReciverStateProvinceId: $('#ReciverStateProvinceId').val(),
                            ReciverCity: $('#ReciverCity').val(),
                            PostmanId: $('#PostmanId').val(),
                            ReciverName: $('#ReciverName').val(),
                            SenderName: $('#SenderName').val(),
                            orderId: $('#orderId').val(),
                            ShipmentState: $('#ShipmentState').val(),
                            ShipmentState2: $('#ShipmentState2').val(),
                            treeCustomerId: $('#treeCustomerId').val(),
                            treeStateId: $('#treeStateId').val(),
                            treeCountryId: $('#treeCountryId').val(),
                            StatusId: $('#orderStatus').val()
                    };
                        console.dir(data);
                        addAntiForgeryToken(data);
                        return data;
                    }

                    function onDataBound(e) {
                        //var currentTab = $('.tabItem.active').find('a').attr('data-tab-name').split('_')[1];
                        //if (currentTab != '1' ) {
                        //    $('.btnSetCollectDate').hide();
                        //}
                        //if (currentTab != '4') {
                        //    $('.btnSendSms').hide();
                        //}
                        //if(currentTab != '4' && currentTab != '1')
                        //    $('.btnAssingTOCollector').hide();
                        $('#shipments-grid input[type=checkbox][id!=mastercheckbox][class=checkboxGroups]').each(function() {
                            var currentId = $(this).val();
                            var checked = jQuery.inArray(currentId, selectedIds);
                            //set checked based on if current checkbox's value is in selectedIds.
                            $(this).attr('checked', checked > -1);
                        });

                        updateMasterCheckbox();
                        // get the grid
                        var grid = this;
                        // iterate through each row
                        grid.tbody.find('>tr').each(function() {

                            // get the row item
                            var dataItem = grid.dataItem(this);
                            // check for the condition
                            if (dataItem.delayDataCollect > 0) {
                                // add the formatting if condition is met
                                $(this).addClass('bgOrang');
                            }
                            if (dataItem.delayShippedDate > 0) {
                                // add the formatting if condition is met
                                $(this).addClass('bgPink');
                            }
                            $(this).removeClass('k-alt');
                        });
                    }

                    function updateMasterCheckbox() {
                        var numChkBoxes = $('#shipments-grid input[type=checkbox][id!=mastercheckbox][class=checkboxGroups]').length;
                        var numChkBoxesChecked = $('#shipments-grid input[type=checkbox][id!=mastercheckbox][class=checkboxGroups]:checked').length;
                        $('#mastercheckbox').attr('checked', numChkBoxes == numChkBoxesChecked && numChkBoxes > 0);
                    }
                    $(document).ready(function ($) {
                        $('select').select2();
                    });
            </script>
        </div>
    </div>
</div>
@*export selected (Excel). We don't use GET approach because it's limited to 2K-4K chars and won't work for large number of entities*@
<form asp-controller="Order" asp-action="PdfPackagingSlipSelected" method="post" id="pdf-packaging-slip-selected-form">
    <input type="hidden" id="selectedIds" name="selectedIds" value="" />
</form>
<script type="text/javascript">
    $(document).ready(function () {
        $('#exportpackagingslips-selected').click(function (e) {
            e.preventDefault();
            var ids = selectedIds.join(",");
            $('#pdf-packaging-slip-selected-form #selectedIds').val(ids);
            $('#pdf-packaging-slip-selected-form').submit();
            return false;
        });
        $('.select2').css('width', '100%');
    });
</script>



<script>


    $(document).ready(function () {

        $('#divmablagh').hide();

        $('input[type=radio]').change(function() {
            if (Radio_Status_conflict_Increase.checked || Radio_Status_conflict_decrease.checked) {
                $('#divmablagh').show();
            }
            else {
                $('#divmablagh').hide();
            }
        });

        $('#btnSetOrderStatus').click(function () {
            var statusId = $('#selectOrderStatus').val();
            if (!statusId || statusId == -1) {
                alert('لطفا وضعیت را انتخاب کنید')
                return;
            }
            var descText = $('#statusText').val();
            var modalType = $('#modalType').val();
            if (modalType == 'fromShipment') {

                $.ajax({
                    cache: false,
                    type: "GET",
                    url: "@(Url.Action("ChangeOrderStatus", "ExtendedOrder"))",
                    data: { shipmentId: shipmentIdForStatus, statusId: statusId, description: descText },
                    success: function (result) {
                        var grid = $('#shipments-grid').data('kendoGrid');
                        grid.dataSource.read();
                        $('#statusText').val('');
                        $('#modalType').val('');
                        $('#selectOrderStatus').val(0);
                        $('#modalShipmentStatus').modal('hide');

                    }
                });
            }
            else {
                 $.ajax({
                    cache: false,
                    type: "POST",
                     url: "@Html.Raw(Url.Action("ChangeOrderStatus", "ExtendedOrder"))?" + 'statusId=' + statusId + '&description=' + descText,
                    data: additionalData(),
                    success: function (data) {
                        $('#modalShipmentStatus').modal('hide');
                        $('#statusText').val('');
                        $('#modalType').val('');
                        $('#selectOrderStatus').val(0);
                    },
                    error: function (xhr, ajaxOptions, thrownError) {
                        alert('Failed to retrieve states.');
                    }
                });
            }

        });

    $('#TrackOrderForeign').click(function () {


          if (Radio_Status_no.checked) {
              _mTracking.Status = 1;
          }
          else if (Radio_Status_yes.checked) {
              _mTracking.Status = 2;
          }
          else if (Radio_Status_conflict_Increase.checked) {
              _mTracking.Status = 3;
          }
          else if (Radio_Status_conflict_decrease.checked) {
              _mTracking.Status = 4;
          }
          else {
              alert('کاربر گرامی خواهشمند است یکی از وضعیت ها را انتخاب بفرمایید');
                                  return;
          }
       _mTracking.Des = TxtDescription.value;
       _mTracking.Mablagh=Txtmablagh1.value;
        var postData = {
            _OrderId: _mTracking.OrderId,
            _Status:_mTracking.Status,
            _Des: _mTracking.Des,
            _Mablagh: _mTracking.Mablagh,
            _ShipingId:_mTracking.ShipingId
        };
        debugger;
       addAntiForgeryToken(postData);
       $.ajax({
           cache: false,
           type: "POST",
           url: "@(Url.Action("TrackForeign", "ExtendedOrder"))",
           data: postData,
           success: function (result) {


               if (result.success == true) {

                   alert(result.message);

                   $('#modalTrackingForeign').modal('hide');
                   var grid = $('#shipments-grid').data('kendoGrid');
                   grid.dataSource.read();
                   TxtDescription.value = "";
                   Txtmablagh1.value = "";
                   $("#Radio_Status_no").prop('checked', false);
                   $("#Radio_Status_yes").prop('checked', false);
                   $("#Radio_Status_conflict_Increase").prop('checked', false);
                   $("#Radio_Status_conflict_decrease").prop('checked', false);
               }
           }
       });
    });

        $('#ShowHistory').click(function () {
            var postDataHistory = { _OrderId: _mTracking.OrderId, _ShipingId: _mTracking.ShipingId };
                        addAntiForgeryToken(postDataHistory);
            $("#History-grid").show();
                        $("#History-grid").kendoGrid({
                                    dataSource: {
                                        type: "json",
                                        transport: {
                                            read: {
                                                url: "@Html.Raw(Url.Action("HistoryListTrackForeign", "ExtendedOrder"))",
                                                type: "POST",
                                                dataType: "json",
                                                data: postDataHistory
                                            }
                                        },
                                        schema: {
                                            data: "Data",
                                            total: "Total",
                                            errors: "Errors"
                                        },
                                        error: function(e) {
                                            display_kendoui_grid_error(e);
                                            // Cancel the changes
                                            this.cancelChanges();
                                        },
                                        pageSize: @(defaultGridPageSize),
                                        serverPaging: true,
                                        serverFiltering: true,
                                        serverSorting: true
                                    },
                                    pageable: {
                                        refresh: true,
                                        pageSizes: [@(gridPageSizes)],
                                        @await Html.PartialAsync("_GridPagerMessages")
                                    },
                                    editable: {
                                        confirmation: "@T("Admin.Common.DeleteConfirmation")",
                                        mode: "inline"
                                    },
                                    scrollable: false,

                                    columns: [

                                        {
                                            field: "Status",
                                            title: "وضعیت",
                                            width: 50
                                        }
                                          ,

                                        {
                                            field: "Des",
                                            title: "توضیحات",
                                            width: 150
                                        }
                                        ,
                                        {
                                            field: "Mablagh",
                                            title: "مبلغ",
                                            width: 50
                                        }
                                        ,
                                        {
                                            field: "IsPay",
                                            title: "وضعیت پرداخت",
                                            width: 50
                                        }
                                        ,
                                        {
                                            field: "User",
                                            title: "کاربر ثبت کننده",
                                            width: 70
                                        }
                                        ,

                                        {
                                            field: "Date",
                                            title: "تاریخ ثبت",
                                            width: 70

                                        }

                                    ]
                                });
                    });
    });

</script>

<div class="modal fade" id="modalTrackingForeign" tabindex="-1" role="dialog" aria-labelledby="EditShipmentModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="EditShipmentModalLabel">اعلام وضعیت محموله های خارجی</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="form-horizontal">
                    <div class="row">
                        <div class="col-md-12">
                            <p>کاربر گرامی، آخرین وضعیت محموله را ثبت بفرمایید</p>

                            <div class="form-group">
                                <div class="col-md-3">
                                    <label class="control-label" for="Radio_mafghod">اعلام وضعیت:</label>
                                </div>
                                <div class="col-md-12">
                                    <div class="radio radio-inline radio-replace">
                                        <input type="radio" name="Radio_Status" id="Radio_Status_no" value="1">
                                        <label for="Radio_Status_no">عدم تایید سفارش </label>
                                    </div>

                                    <div class="radio radio-inline radio-replace">
                                        <input type="radio" name="Radio_Status" id="Radio_Status_yes" value="2">
                                        <label for="Radio_Status_yes">تایید سفارش </label>
                                    </div>
                                    <div class="radio radio-inline radio-replace">
                                        <input type="radio" name="Radio_Status" id="Radio_Status_conflict_Increase" value="3">
                                        <label for="Radio_Status_conflict_Increase">اعلام مغایرت-افزایش مبلغ پستی </label>
                                    </div>
                                    <div class="radio radio-inline radio-replace" hidden>
                                        <input type="radio" name="Radio_Status" id="Radio_Status_conflict_decrease" value="4">
                                        <label for="Radio_Status_conflict_decrease">اعلام مغایرت-کاهش مبلغ پستی </label>
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-12">
                                    <textarea class="form-control" rows="2" id="TxtDescription" placeholder="توضیحات را وارد نمایید"></textarea>
                                </div>
                            </div>
                            <div class="form-group" id="divmablagh">
                                <div class="col-md-3">
                                    <label class="control-label" for="Txtmablagh1">مبلغ مغایرت(افزایش/کاهش): </label>
                                </div>
                                <div class="col-md-19">
                                    <input id="Txtmablagh1" name="Txtmablagh1" tabindex="3" type="text" onkeypress="return (event.charCode !=8 && event.charCode ==0 || (event.charCode >= 48 && event.charCode <= 57))">

                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-1">
                                    <button id="ShowHistory" class="btn btn-primary" type="button"> <i class="fa fa-eye"> مشاهده تاریخچه</i> </button>
                                </div>
                            </div>

                        </div>
                    </div>
                    <div class="row">
                        <div id="History-grid"></div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <input type="hidden" id="EditShipmentId" />
                <button type="button" class="btn btn-secondary" data-dismiss="modal">انصراف</button>
                <button type="button" id="TrackOrderForeign" class="btn btn-primary">تایید،ویرایش</button>
            </div>
        </div>
    </div>
</div>




<div class="modal fade" id="modalShipmentStatus" tabindex="-1" role="dialog" aria-labelledby="modalShipmentStatus" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="EditShipmentModalLabel">اعلام وضعیت محموله </h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="form-horizontal">
                    <div class="row">
                        <div class="col-md-12">
                            <p>کاربر گرامی، آخرین وضعیت محموله را ثبت بفرمایید</p>

                            <div class="form-group">
                                <div class="col-md-3">
                                    <label class="control-label" for="Radio_mafghod">اعلام وضعیت:</label>
                                </div>
                                <div class="col-md-12">
                                    <select id="selectOrderStatus" class="statusSelect"></select>
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-12">
                                    <textarea class="form-control" rows="2" id="statusText" placeholder="توضیحات را وارد نمایید"></textarea>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <input type="hidden" id="modalType" />
                <input type="hidden" id="EditShipmentId" />
                <button type="button" class="btn btn-secondary" data-dismiss="modal">انصراف</button>
                <button type="button" id="btnSetOrderStatus" class="btn btn-primary">ثبت</button>
            </div>
        </div>
    </div>
</div>
