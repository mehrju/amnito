@model FoxNetSoft.Plugin.Payments.PaymentRules.Models.PaymentRuleModel
@using System.Text.Encodings.Web
@{
    Html.AddScriptParts("~/lib/jquery.tmpl.min.js");
}
<div class="panel-group">
    @if (Model.Id > 0)
    {
        <p>
            @T("Admin.FoxNetSoft.PaymentRules.Requirements.Description")
        </p>

            <script type="text/javascript">
                $(document).ready(function() {
                    $("#@Html.IdFor(model => model.AddRequirement)").change(loadNewRequirementBox);

                    //load add requirement box
                    loadNewRequirementBox();

                    //load existing requirements
                    loadRequirements();

                    //adding requirement event
                    $("#foxnetsoftRequirementContainer").bind('foxnetsoftnewrequirementadded', function(event, newRequirementId) {
                        var parentId = $("#@Html.IdFor(model => model.RequirementGroupId)").val();
                        loadRequirements(newRequirementId, parentId);
                    });
                });

                //load HTML for adding requirement
                function loadNewRequirementBox() {
                    //load URL
                    var systemName = $("#@Html.IdFor(model => model.AddRequirement)").val();
                    if (systemName) {
                        var groupsElement = $("#@Html.IdFor(model => model.RequirementGroupId)");
                        if (groupsElement.find('option').length > 1) {
                            $("#pnlGroup").show();
                        }
                        else {
                            $("#pnlGroup").hide();
                        }
                        if (systemName == 'AddGroup') {
                            $("#pnlAddNewGroup").show();
                            $("#pnlGroupName").show();
                            $('#addrequirementplaceholder').html('');
                        }
                        else {
                            $("#pnlAddNewGroup").hide();
                            $("#pnlGroupName").hide();
                            $.ajax({
                                cache: false,
                                url: "@(Url.Action("GetRequirementConfigurationUrl", "PaymentRulesAdmin", new { area = "Admin" }))",
                                data: { "systemName": systemName, "externalId": @Model.Id },
                                success: function(result) {
                                    loadRequirementIntoBox(result.url, '#addrequirementplaceholder');
                                },
                                error: function(xhr, ajaxOptions, thrownError) {
                                    $('#addrequirementplaceholder').html('Failed to load requirement URL');
                                }
                            });
                        }
                    } else {
                        $("#pnlGroupName").hide();
                        $("#pnlGroup").hide();
                        $("#pnlAddNewGroup").hide();
                        $('#addrequirementplaceholder').html('');
                    }
                };

                //load requirement HTML
                function loadRequirementIntoBox(configureRuleUrl, placeholderName) {
                    $.ajax({
                        cache: false,
                        url: configureRuleUrl,
                        dataType: "html",
                        success: function(result) {
                            $(placeholderName).html(result);
                        },
                        error: function(xhr, ajaxOptions, thrownError) {
                            $(placeholderName).html('Failed to load requirement content.');
                        }
                    });
                };

                function loadRequirements(requirementId, parentId, interactionTypeId, deleteRequirement) {
                    var postData = {
                        externalId: @Model.Id,
                        requirementId: (typeof requirementId === 'undefined' ? 0 : requirementId),
                        parentId: (typeof parentId === 'undefined' ? null : parentId),
                        interactionTypeId: (typeof interactionTypeId === 'undefined' ? null : interactionTypeId),
                        deleteRequirement: (typeof deleteRequirement === 'undefined' ? false : deleteRequirement)
                    };

                    addAntiForgeryToken(postData);
                    $.ajax({
                        cache: false,
                        type: "POST",
                        url: "@(Url.Action("GetRequirements", "PaymentRulesAdmin", new { area = "Admin" }))",
                        data: postData,
                        success: function(result) {
                            //set requirements
                            loadRequirementBoxes(result.Requirements, "#foxnetsoftRequirementContainer", true);

                            //set available groups
                            var groupsElement = $("#@Html.IdFor(model => model.RequirementGroupId)");
                            groupsElement.html('');
                            $.each(result.AvailableGroups, function (id, option) {
                                groupsElement.append($('<option></option>').val(option.Value).html(option.Text));
                            });
                            var systemName = $("#@Html.IdFor(model => model.AddRequirement)").val();
                            if (systemName && groupsElement.find('option').length > 1) {
                                $("#pnlGroup").show();
                            }
                            else {
                                $("#pnlGroup").hide();
                            }
                        },
                        error: function(xhr, ajaxOptions, thrownError) {
                            alert('Failed to load requirements info. Please refresh the page');
                        }
                    });
                };

                //load HTML for exisiting requirements
                function loadRequirementBoxes(requirements, placeholder, hideEmptyString) {
                    if(requirements.length > 0 || hideEmptyString)
                        $(placeholder).html('');
                    else
                        $(placeholder).html('@T("Admin.FoxNetSoft.PaymentRules.Requirements.GroupIsEmpty")');

                    $("#paymentRequirementTemplate").tmpl(requirements).appendTo(placeholder);

                    for (var i = 0; i < requirements.length; i++) {
                        var placeholderName = '#editrequirementplaceholder' + requirements[i].RequirementId;
                        $(placeholderName).html('loading...');
                        if (requirements[i].IsGroup) {
                            loadRequirementBoxes(requirements[i].ChildRequirements, placeholderName, false);
                        }
                        else {
                            loadRequirementIntoBox(requirements[i].ConfigurationUrl, placeholderName);
                        }
                    }
                };

                //add new group
                function addNewGroup() {
                    var postData = {
                        externalId: @Model.Id,
                        name: $("#@Html.IdFor(model => model.GroupName)").val(),
                    };

                    addAntiForgeryToken(postData);
                    $.ajax({
                        cache: false,
                        type: "POST",
                        data: postData,
                        url: "@(Url.Action("AddNewGroup", "PaymentRulesAdmin"))",
                        success: function (data) {
                            $("#foxnetsoftRequirementContainer").trigger('foxnetsoftnewrequirementadded', [data.NewRequirementId]);
                        },
                        error:function (xhr, ajaxOptions, thrownError) {
                            alert('@Html.Raw(JavaScriptEncoder.Default.Encode(T("Admin.FoxNetSoft.PaymentRules.Requirements.FailedToSave").Text))');
                        }
                    });
                };

                //delete requirement rule
                function deleteRequirement(requirementId) {
                    loadRequirements(requirementId, null, null, true);
                };

                //change interaction type
                function changeInteraction(requirementId, parentId, typeId) {
                    loadRequirements(requirementId, parentId, typeId);
                };
            </script>

            <!-- Template container -->
            <div id="foxnetsoftRequirementContainer"></div>

            <!-- Payment rule requirement template -->
            <script id="paymentRequirementTemplate" type="text/html">
                <div class="requirement-container {{if IsGroup}}requirement-group{{/if}}" id="editrequirement{{= RequirementId }}">
                    <div class="requirement-heading clearfix">
                        {{if IsGroup}}
                        <span class="pull-left margin-r-5">
                            @T("Admin.FoxNetSoft.PaymentRules.Requirements.RequirementGroup.Title")
                            <i>{{= RequirementName }}</i>
                        </span>
                        <div class="interaction-type pull-left clearfix">
                            <span class="pull-left margin-r-10">@T("Admin.FoxNetSoft.PaymentRules.Requirements.InteractionTypeInGroup")</span>
                            <select class="form-control input-sm pull-left" id="interactiontype{{= RequirementId }}" name="interactiontype{{= RequirementId }}"
                                    onchange="changeInteraction({{= RequirementId }}, ${ParentId ? ParentId : 'null'}, this.value)">
                                {{each AvailableInteractionTypes}}
                                {{if Selected}}
                                <option value="${Value}" selected>${Text}</option>
                                {{else}}
                                <option value="${Value}">${Text}</option>
                                {{/if}}
                                {{/each}}
                            </select>
                        </div>
                        {{else}}
                        <div class="pull-left">
                            @T("Admin.FoxNetSoft.PaymentRules.Requirements.Requirement.Title")
                            <i>{{= RequirementName }}</i>
                        </div>
                        {{/if}}
                        {{if ParentId}}
                        <button type="button" class="btn btn-link" id="deleterequirement{{= RequirementId }}" onclick="deleteRequirement({{= RequirementId }})">
                            <i class="fa fa-trash"></i>
                            {{if IsGroup}}
                            @T("Admin.FoxNetSoft.PaymentRules.Requirements.RemoveGroup")
                            {{else}}
                            @T("Admin.FoxNetSoft.PaymentRules.Requirements.RemoveRequirement")
                            {{/if}}
                        </button>
                        {{/if}}
                    </div>
                    <div class="requirement-body">
                        <div id="editrequirementplaceholder{{= RequirementId }}"></div>
                    </div>
                </div>
                {{if !IsLastInGroup}}
                <div class="interaction-type-label">
                    {{each AvailableInteractionTypes}}
                    {{if Value == InteractionTypeId}}
                    ${Text}
                    {{/if}}
                    {{/each}}
                </div>
                {{/if}}
            </script>

            <div class="panel panel-default panel-add-requirement">
                <div class="panel-heading">
                    @T("Admin.FoxNetSoft.PaymentRules.Requirements.AddNew")
                </div>
                <div class="panel-body">
                    <div class="form-group">
                        <div class="col-md-3">
                            <nop-label asp-for="AddRequirement" />
                        </div>
                        <div class="col-md-9">
                            <nop-select asp-for="AddRequirement" asp-items="Model.AvailableRequirements" />
                            <span asp-validation-for="AddRequirement"></span>
                        </div>
                    </div>
                    <div class="form-group" id="pnlGroup" style="display: none">
                        <div class="col-md-3">
                            <nop-label asp-for="RequirementGroupId" />
                        </div>
                        <div class="col-md-9">
                            <nop-select asp-for="RequirementGroupId" asp-items="Model.AvailableRequirementGroups" />
                            <span asp-validation-for="RequirementGroupId"></span>
                        </div>
                    </div>
                    <div id="addrequirementplaceholder"></div>
                    <div class="form-group" id="pnlGroupName" style="display: none">
                        <div class="col-md-3">
                            <nop-label asp-for="GroupName" />
                        </div>
                        <div class="col-md-9">
                            <nop-editor asp-for="GroupName" />
                            <span asp-validation-for="GroupName"></span>
                        </div>
                    </div>
                    <div class="form-group" id="pnlAddNewGroup" style="display: none">
                        <div class="col-md-9 col-md-offset-3">
                            <input type="button" id="saverequirement" class="btn btn-primary" value="@T("Admin.Common.Save")" onclick="addNewGroup()" />
                        </div>
                    </div>
                </div>
            </div>
    }
    else
    {
        <div class="panel panel-default">
            <div class="panel-body">
                @T("Admin.FoxNetSoft.PaymentRules.Requirements.SaveBeforeEdit")
            </div>
        </div>
    }
</div>