using BS.Plugin.NopStation.MobileWebApi.Extensions;
using BS.Plugin.NopStation.MobileWebApi.Models.App.Params;
using BS.Plugin.NopStation.MobileWebApi.Models.App.Results;
using Microsoft.AspNetCore.Hosting;
using Microsoft.AspNetCore.Mvc;
using Nop.Core;
using Nop.Core.Data;
using Nop.Core.Domain.Customers;
using Nop.plugin.Orders.ExtendedShipment.Services;
using Nop.Plugin.Misc.PostbarDashboard.Models;
using Nop.Services.Common;
using Nop.Services.Customers;
using Nop.Services.Media;
using Nop.Web.Controllers;
using System;
using System.Collections.Generic;
using System.Drawing;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace BS.Plugin.NopStation.MobileWebApi.Controllers
{
    public class AppController : BaseApiController
    {
        private readonly IRepository<Tbl_ServiceProviderDashboard> _repositoryTbl_ServiceProviderDashboard;
        private readonly IHostingEnvironment _hostingEnvironment;
        private readonly INotificationService _notificationService;

        private readonly IWorkContext _workContext;
        private readonly CustomerSettings _customerSettings;
        private readonly IPictureService _pictureService;
        private readonly IGenericAttributeService _genericAttributeService;
        private readonly IRepository<Tbl_CheckAvatarCustomer> _repositoryTbl_CheckAvatarCustomer;
        private readonly ICustomerRegistrationService _customerRegistrationService;
        private readonly ICustomerService _customerService;
        private readonly ICustomerAttributeService _customerAttributeService;
        private readonly ICustomerAttributeParser _customerAttributeParser;

        public AppController
            (
             IHostingEnvironment hostingEnvironment,
            IRepository<Tbl_ServiceProviderDashboard> repositoryTbl_ServiceProviderDashboard,
            INotificationService notificationService,
            IWorkContext workContext,
        CustomerSettings customerSettings,
        IPictureService pictureService,
        IGenericAttributeService genericAttributeService,
        IRepository<Tbl_CheckAvatarCustomer> repositoryTbl_CheckAvatarCustomer,
        ICustomerRegistrationService customerRegistrationService,
        ICustomerService customerService,
        ICustomerAttributeService customerAttributeService,
        ICustomerAttributeParser customerAttributeParser

            )
        {

            _repositoryTbl_ServiceProviderDashboard = repositoryTbl_ServiceProviderDashboard;
            _hostingEnvironment = hostingEnvironment;
            _notificationService = notificationService;
            _workContext = workContext;
            _customerSettings = customerSettings;
            _pictureService = pictureService;
            _genericAttributeService = genericAttributeService;
            _repositoryTbl_CheckAvatarCustomer = repositoryTbl_CheckAvatarCustomer;
            _customerRegistrationService = customerRegistrationService;
            _customerService = customerService;
            _customerAttributeService = customerAttributeService;
            _customerAttributeParser = customerAttributeParser;
        }

        [Route("api/App/GetServiceProviderDashboard")]
        [HttpGet]
        public object GetServiceProviderDashboard()
        {
            try
            {
                List<mResultServiceProvider> result = new List<mResultServiceProvider>();
                List<Tbl_ServiceProviderDashboard> Lists = _repositoryTbl_ServiceProviderDashboard.Table.Where(p => p.IsActive).ToList();
                if (Lists.Count > 0)
                {
                    foreach (var item in Lists)
                    {
                        mResultServiceProvider temp = new mResultServiceProvider();
                        temp.Id = item.Id;
                        temp.Title = item.TitleServiceProviderDashboard;
                        //temp.Image_Base64 = ImageToBase64(item.UrlImage);
                        temp.Image_Base64 = "";// ImageToBase64("" + item.UrlImage);
                        result.Add(temp);
                    }
                    mResponseList.success.data = (result);
                    return mResponseList.success;
                }
                else
                {
                    return mResponseList.error_No_Data_Exist;
                }

            }
            catch (Exception ee)
            {
                mResponseList.error_Execption.data = ee.Message;
                return mResponseList.error_Execption;
            }
        }


        [Route("api/App/GetMainServiceDashboard")]
        [HttpGet]
        public object GetMainServiceDashboard()
        {
            try
            {
                List<mResultMainService> result = new List<mResultMainService>();

                //1
                mResultMainService temp1 = new mResultMainService();
                temp1.Id = 1;
                temp1.Title = "داخلی";
                temp1.Image_Base64 = "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";
                result.Add(temp1);

                //2
                mResultMainService temp2 = new mResultMainService();
                temp2.Id = 1;
                temp2.Title = "خارجی";
                temp2.Image_Base64 = "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";
                result.Add(temp2);

                //3
                mResultMainService temp3 = new mResultMainService();
                temp3.Id = 1;
                temp3.Title = "حمل و نقل سنگین";
                temp3.Image_Base64 = "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";
                result.Add(temp3);


                mResponseList.success.data = (result);
                return mResponseList.success;


            }
            catch (Exception ee)
            {
                mResponseList.error_Execption.data = ee.Message;
                return mResponseList.error_Execption;
            }
        }


        [HttpPost]
        [Route("api/App/EditAccount")]
        public object EditAccount(mEditAccount model)
        {
            try
            {
                if (!_workContext.CurrentCustomer.IsRegistered())
                    return mResponseList.error_CustomerNoRegistered;

                #region Check Params
                if (string.IsNullOrEmpty(model.FirstName))
                {
                    mResponseList.error_invalid_param.message_fa = "نام کاربر خالی میباشد";
                    return mResponseList.error_invalid_param;
                }
                if (string.IsNullOrEmpty(model.LastName))
                {
                    mResponseList.error_invalid_param.message_fa = "نام خانوادگی  کاربر خالی میباشد";
                    return mResponseList.error_invalid_param;
                }
                if (string.IsNullOrEmpty(model.CodeMeli))
                {
                    mResponseList.error_invalid_param.message_fa = "کد ملی کاربر خالی میباشد";
                    return mResponseList.error_invalid_param;
                }
                if (string.IsNullOrEmpty(model.Phone))
                {
                    mResponseList.error_invalid_param.message_fa = "موبایل کاربر خالی میباشد";
                    return mResponseList.error_invalid_param;
                }
                if (!CheckCodeMeli.IsValidNationalCode(model.CodeMeli))
                {
                    mResponseList.error_invalid_param.message_fa = "کد ملی ارسال شده نامعتبر است";
                    return mResponseList.error_invalid_param;
                }
                if (!model.Phone.StartsWith("09") || model.Phone.Length != 11)
                {
                    mResponseList.error_invalid_param.message_fa = "شماره موبایل ارسال شده نامعتبر است";
                    return mResponseList.error_invalid_param;
                }
                #endregion

                var customer = _workContext.CurrentCustomer;

                if (model.Image_Base64 != null && model.Image_Base64 != "")
                {
                    #region Avatar
                    if (!_customerSettings.AllowCustomersToUploadAvatars)
                        return mResponseList.error_CustomerNoAllowToUploadAvatar;

                    var customerAvatar = _pictureService.GetPictureById(customer.GetAttribute<int>(SystemCustomerAttributeNames.AvatarPictureId));
                    if (model.Image_Base64 != null)
                    {
                        

                        byte[] bytes = Convert.FromBase64CharArray(model.Image_Base64.ToCharArray(), 0, model.Image_Base64.Length); 

                        var avatarMaxSize = _customerSettings.AvatarMaximumSizeBytes;
                        if (bytes.Length > avatarMaxSize)
                            return mResponseList.error_MaximumUploadedFileSize;

                        var customerPictureBinary = bytes;
                        if (customerAvatar != null)
                            customerAvatar = _pictureService.UpdatePicture(customerAvatar.Id, customerPictureBinary, ".jpg", null);
                        else
                            customerAvatar = _pictureService.InsertPicture(customerPictureBinary, ".jpg", null);
                    }

                    var customerAvatarId = 0;
                    if (customerAvatar != null)
                        customerAvatarId = customerAvatar.Id;

                    _genericAttributeService.SaveAttribute(customer, SystemCustomerAttributeNames.AvatarPictureId, customerAvatarId);

                    #region ADD to table Avatar for Check
                    Tbl_CheckAvatarCustomer Temp = new Tbl_CheckAvatarCustomer();
                    Temp.CustomerAvatarId = customerAvatarId;
                    Temp.CustomerId = customer.Id;
                    Temp.DateInsert = DateTime.Now;
                    Temp.StateVerify = 0;
                    _repositoryTbl_CheckAvatarCustomer.Insert(Temp);
                    #endregion

                    #endregion
                }
                //email
                if (!string.IsNullOrEmpty(model.Email))
                {
                    if (!customer.Email.Equals(model.Email.Trim(), StringComparison.InvariantCultureIgnoreCase))
                    {
                        //change email
                        var requireValidation = _customerSettings.UserRegistrationType == UserRegistrationType.EmailValidation;
                        _customerRegistrationService.SetEmail(customer, model.Email.Trim(), requireValidation);
                    }
                }
               
                _genericAttributeService.SaveAttribute(customer, SystemCustomerAttributeNames.FirstName, model.FirstName);
                _genericAttributeService.SaveAttribute(customer, SystemCustomerAttributeNames.LastName, model.LastName);
                _genericAttributeService.SaveAttribute(customer, SystemCustomerAttributeNames.Phone, model.Phone);
                var attribute = _customerAttributeService.GetCustomerAttributeById(8);
                string customerAttributesXml = "";
                customerAttributesXml = _customerAttributeParser.AddCustomerAttribute("",
                                         attribute, model.CodeMeli.ToString());
                _genericAttributeService.SaveAttribute(customer, SystemCustomerAttributeNames.CustomCustomerAttributes, customerAttributesXml);

                return mResponseList.success;
            }
            catch (Exception ee)
            {
                mResponseList.error_Execption.data = ee.Message;
                return mResponseList.error_Execption;
            }
        }


        public string ImageToBase64(string fName)
        {
            string base64String = null;
            //var filePath = Path.Combine(Directory.GetCurrentDirectory(), @"wwwroot\TicketFiles", fName);
            string filePath = Path.Combine(_hostingEnvironment.ContentRootPath, @"wwwroot\TicketFiles\1.jpg");
            //filePath.Replace("\\", @"\");
            byte[] bytes = System.Text.ASCIIEncoding.ASCII.GetBytes(filePath);
            base64String = System.Convert.ToBase64String(bytes);
            return base64String;
            //using (FileStream fs = new FileStream(filePath, FileMode.Open, FileAccess.Read))
            //{
            //    using (Image original = Image.FromStream(fs))
            //    {
            //        using (MemoryStream m = new MemoryStream())
            //        {
            //            original.Save(m, original.RawFormat);
            //            byte[] imageBytes = m.ToArray();
            //            base64String = Convert.ToBase64String(imageBytes);
            //            return base64String;
            //        }
            //    }
            //}

            //using (System.Drawing.Image image = System.Drawing.Image.FromFile(filePath))
            //{
            //    using (MemoryStream m = new MemoryStream())
            //    {
            //        image.Save(m, image.RawFormat);
            //        byte[] imageBytes = m.ToArray();
            //        base64String = Convert.ToBase64String(imageBytes);
            //        return base64String;
            //    }
            //}

        }
    }
}
